{"version":3,"sources":["node_modules/ionic4-auto-complete/fesm2015/ionic4-auto-complete.js","src/app/components/custom-template/custom-template.component.html","src/app/components/multi-function/multi-function.component.html","src/app/components/simple-function/simple-function.component.html","src/app/components/simple-service/simple-service.component.html","src/app/pages/home/home.page.html","src/app/components/custom-template/custom-template.component.scss","src/app/components/custom-template/custom-template.component.ts","src/app/components/custom-template/custom-template.module.ts","src/app/components/multi-function/multi-function.component.scss","src/app/components/multi-function/multi-function.component.ts","src/app/components/multi-function/multi-function.module.ts","src/app/components/simple-function/simple-function.component.scss","src/app/components/simple-function/simple-function.component.ts","src/app/components/simple-function/simple-function.module.ts","src/app/components/simple-service/simple-service.component.scss","src/app/components/simple-service/simple-service.component.ts","src/app/components/simple-service/simple-service.module.ts","src/app/pages/home/home.module.ts","src/app/pages/home/home.page.scss","src/app/pages/home/home.page.ts","src/app/services/simple-function.service.ts","src/app/services/simple-service.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { __decorate } from 'tslib';\nimport { EventEmitter, Renderer2, Input, Output, ViewChild, ElementRef, HostListener, Component, Pipe, Injectable, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { Subject, from, Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nclass AutoCompleteOptions {\n    constructor() {\n        this.animated = false;\n        this.color = null;\n        this.autocomplete = 'off';\n        this.autocorrect = 'off';\n        this.cancelButtonIcon = 'arrow-round-back';\n        this.cancelButtonText = 'Cancel';\n        this.clearIcon = 'close-circle';\n        this.clearInput = false;\n        this.clearOnEdit = false;\n        this.debounce = 250;\n        this.mode = 'md';\n        this.noItems = 'No items found.';\n        this.placeholder = 'Search';\n        this.searchIcon = 'search';\n        this.showCancelButton = false;\n        this.spellcheck = 'off';\n        this.type = 'search';\n        this.value = '';\n    }\n}\n\nclass AutoCompleteStyles {\n    constructor() {\n        this.list = {};\n        this.listItem = {};\n        this.searchbar = {};\n    }\n}\n\nvar AutoCompleteComponent_1;\nlet AutoCompleteComponent = AutoCompleteComponent_1 = class AutoCompleteComponent {\n    /**\n     * Create a new instance\n     */\n    constructor(renderer) {\n        this.renderer = renderer;\n        this.enableBrowserAutoComplete = false;\n        this.clearInvalidInput = true;\n        this.disabled = false;\n        this.exclude = [];\n        this.frontIcon = false;\n        this.hideListOnSelection = true;\n        this.location = 'auto';\n        this.maxResults = 8;\n        this.maxSelected = null;\n        this.multi = false;\n        this.name = '';\n        this.options = new AutoCompleteOptions();\n        this.removeButtonClasses = '';\n        this.removeButtonColor = 'primary';\n        this.removeButtonIcon = 'close-circle';\n        this.removeButtonSlot = 'end';\n        this.removeDuplicateSuggestions = true;\n        this.styles = new AutoCompleteStyles;\n        this.useIonInput = false;\n        this.onTouchedCallback = false;\n        this.onChangeCallback = false;\n        this.hasFocus = false;\n        this.isLoading = false;\n        this.focusedOption = -1;\n        this.showListChanged = false;\n        this.autoBlur = new EventEmitter();\n        this.autoFocus = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ionAutoInput = new EventEmitter();\n        this.itemsChange = new EventEmitter();\n        this.itemsCleared = new EventEmitter();\n        this.itemsHidden = new EventEmitter();\n        this.itemRemoved = new EventEmitter();\n        this.itemSelected = new EventEmitter();\n        this.itemsShown = new EventEmitter();\n        this.modelChange = new EventEmitter();\n        this.keyword = '';\n        this.suggestions = [];\n        this._showList = false;\n        this.options = new AutoCompleteOptions();\n        this.defaultOpts = new AutoCompleteOptions();\n        this.selected = [];\n    }\n    get model() {\n        let model = this.selected;\n        if (!this.multi && typeof this.selected.length !== 'undefined') {\n            if (this.selected.length === 0) {\n                model = null;\n            }\n            else {\n                model = this.selected[0];\n            }\n        }\n        return model;\n    }\n    set model(selected) {\n        if (typeof selected !== 'undefined') {\n            this.selected = selected;\n            this.keyword = this.getLabel(selected);\n        }\n    }\n    set eager(eager) {\n        if (eager) {\n            this.getItems(null, false);\n        }\n    }\n    get showList() {\n        return this._showList;\n    }\n    set showList(value) {\n        if (this._showList === value) {\n            return;\n        }\n        this._showList = value;\n        this.showListChanged = true;\n    }\n    /**\n     *\n     */\n    ngAfterViewChecked() {\n        if (this.showListChanged) {\n            this.showListChanged = false;\n            this.showList ? this.itemsShown.emit() : this.itemsHidden.emit();\n        }\n    }\n    ngDoCheck() {\n        if (!this.hasFocus) {\n            if (this.clearInvalidInput && (this.selected === null || this.multi)) {\n                if (this.keyword !== '') {\n                    this.keyword = '';\n                }\n                if (this.inputElem && this.inputElem.nativeElement) {\n                    if (this.inputElem.nativeElement.children && this.inputElem.nativeElement.children.length !== 0) {\n                        if (this.inputElem.nativeElement.children[0].children && this.inputElem.nativeElement.children[0].children.length !== 0) {\n                            if (this.inputElem.nativeElement.children[0].children[0].value) {\n                                this.inputElem.nativeElement.children[0].children[0].value = '';\n                            }\n                        }\n                    }\n                }\n                if (this.searchbarElem && this.searchbarElem.nativeElement) {\n                    if (this.searchbarElem.nativeElement.children && this.searchbarElem.nativeElement.children.length !== 0) {\n                        if (this.searchbarElem.nativeElement.children[0].children) {\n                            if (this.searchbarElem.nativeElement.children[0].children.length !== 0) {\n                                if (this.searchbarElem.nativeElement.children[0].children[0].value) {\n                                    this.searchbarElem.nativeElement.children[0].children[0].value = '';\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Handle document click\n     *\n     * @param event\n     *\n     * @private\n     */\n    documentClickHandler(event) {\n        if ((this.searchbarElem && this.searchbarElem.nativeElement && !this.searchbarElem.nativeElement.contains(event.target))\n            ||\n                (!this.inputElem && this.inputElem.nativeElement && this.inputElem.nativeElement.contains(event.target))) {\n            this.hideItemList();\n        }\n    }\n    /**\n     * Get value from form\n     *\n     * @param selection\n     *\n     * @private\n     */\n    getFormValue(selection) {\n        if (selection == null || typeof this.dataProvider === 'function') {\n            return null;\n        }\n        let attr = this.dataProvider.formValueAttribute == null ?\n            this.dataProvider.labelAttribute : this.dataProvider.formValueAttribute;\n        if (typeof selection === 'object' && attr) {\n            return selection[attr];\n        }\n        return selection;\n    }\n    /**\n     * Get element's position on screen\n     *\n     * @param el\n     *\n     * @private\n     */\n    _getPosition(el) {\n        let xPos = 0;\n        let yPos = 0;\n        while (el) {\n            if (el.tagName === 'BODY') {\n                const xScroll = el.scrollLeft || document.documentElement.scrollLeft;\n                const yScroll = el.scrollTop || document.documentElement.scrollTop;\n                xPos += (el.offsetLeft - xScroll + el.clientLeft);\n                yPos += (el.offsetTop - yScroll + el.clientTop);\n            }\n            else {\n                xPos += (el.offsetLeft - el.scrollLeft + el.clientLeft);\n                yPos += (el.offsetTop - el.scrollTop + el.clientTop);\n            }\n            el = el.offsetParent;\n        }\n        return {\n            x: xPos,\n            y: yPos\n        };\n    }\n    clickClear() {\n        this.clearValue(true);\n        this.itemsCleared.emit(true);\n    }\n    /**\n     * Clear current input value\n     *\n     * @param hideItemList\n     */\n    clearValue(hideItemList = false) {\n        this.keyword = '';\n        this.selection = null;\n        this.formValue = null;\n        if (hideItemList) {\n            this.hideItemList();\n        }\n        this.focusedOption = -1;\n        return;\n    }\n    keyupIonSearchbar(event, show) {\n        this.getItems(event.detail.target.value, show);\n    }\n    keyupIonInput(event, show) {\n        this.getItems(event.target.value, show);\n    }\n    /**\n     * Get items for auto-complete\n     *\n     * @param keyword\n     * @param show\n     */\n    getItems(keyword, show) {\n        this.isLoading = true;\n        if (this.promise) {\n            clearTimeout(this.promise);\n        }\n        this.promise = setTimeout(() => {\n            if (event) {\n                this.keyword = keyword;\n            }\n            let result;\n            if (this.showResultsFirst && this.keyword.trim() === '') {\n                this.keyword = '';\n            }\n            if (typeof this.dataProvider === 'function') {\n                result = this.dataProvider(this.keyword);\n                this.setSuggestions(result, show);\n                this.isLoading = false;\n            }\n            else {\n                result = this.dataProvider.getResults(this.keyword);\n                if (result instanceof Subject) {\n                    result = result.asObservable();\n                }\n                else if (result instanceof Promise) {\n                    result = from(result);\n                }\n                if (result instanceof Observable) {\n                    result.pipe(finalize(() => {\n                        this.isLoading = false;\n                    })).subscribe((results) => {\n                        this.setSuggestions(results, show);\n                    }, (error) => console.error(error));\n                }\n                else {\n                    this.setSuggestions(result, show);\n                    this.isLoading = false;\n                }\n            }\n            this.ionAutoInput.emit(this.keyword);\n        }, this.options.debounce);\n    }\n    /**\n     * Get an item's label\n     *\n     * @param selection\n     */\n    getLabel(selection) {\n        if (selection == null || typeof this.dataProvider === 'function') {\n            return '';\n        }\n        let attr = this.dataProvider.formValueAttribute == null ?\n            this.dataProvider.labelAttribute : this.dataProvider.formValueAttribute;\n        let value = selection;\n        if (this.dataProvider.getItemLabel) {\n            value = this.dataProvider.getItemLabel(value);\n        }\n        if (!this.multi && typeof value !== 'undefined' && Object.prototype.toString.call(value) === '[object Array]') {\n            if (value.length === 0) {\n                return '';\n            }\n            else {\n                value = value[0];\n            }\n        }\n        if (typeof value === 'object' && attr) {\n            return value[attr] || '';\n        }\n        return value || '';\n    }\n    /**\n     * Get current selection\n     */\n    getSelection() {\n        if (this.multi) {\n            return this.selection;\n        }\n        else {\n            return this.selected;\n        }\n    }\n    /**\n     * Get menu style\n     */\n    listStyles() {\n        const listLocationStyles = this.listLocationStyles();\n        return Object.assign({}, listLocationStyles, this.styles.list);\n    }\n    listLocationStyles() {\n        let location = this.location;\n        if (this.location === 'auto') {\n            const elementY = this._getPosition(this.searchbarElem.nativeElement).y;\n            const windowY = window.innerHeight;\n            if (elementY > windowY - elementY) {\n                location = 'top';\n            }\n            else {\n                location = 'bottom';\n            }\n        }\n        if (location === 'bottom') {\n            return {};\n        }\n        else {\n            return {\n                'bottom': '37px'\n            };\n        }\n    }\n    /**\n     * Get current input value\n     */\n    getValue() {\n        return this.formValue;\n    }\n    /**\n     * Handle tap\n     *\n     * @param event\n     */\n    handleTap(event) {\n        if (this.showResultsFirst || this.keyword.length > 0) {\n            this.getItems();\n        }\n    }\n    /**\n     * Handle tap when selecting an item\n     *\n     * @param $event\n     * @param suggestion\n     */\n    handleSelectTap($event, suggestion) {\n        this.selectItem(suggestion);\n        if ($event.srcEvent) {\n            if ($event.srcEvent.stopPropagation) {\n                $event.srcEvent.stopPropagation();\n            }\n            if ($event.srcEvent.preventDefault) {\n                $event.srcEvent.preventDefault();\n            }\n        }\n        else if ($event.preventDefault) {\n            $event.preventDefault();\n        }\n        return false;\n    }\n    /**\n     * Hide item list\n     */\n    hideItemList() {\n        this.showList = this.alwaysShowList;\n        this.focusedOption = -1;\n    }\n    highlightItem(direction) {\n        const max = this.suggestions.length - 1;\n        if (direction < 0) {\n            if (this.focusedOption === -1 || this.focusedOption === max) {\n                this.focusedOption = 0;\n            }\n            else {\n                this.focusedOption++;\n            }\n        }\n        else if (direction > 0) {\n            if (this.focusedOption === -1 || this.focusedOption === 0) {\n                this.focusedOption = max;\n            }\n            else {\n                this.focusedOption--;\n            }\n        }\n    }\n    /**\n     * Fired when the input focused\n     */\n    onFocus(event) {\n        this.hasFocus = true;\n        this.getItems();\n        event = this._reflectName(event);\n        this.autoFocus.emit(event);\n        this.focus.emit(event);\n    }\n    /**\n     * Fired when the input focused\n     */\n    onBlur(event) {\n        this.hasFocus = false;\n        event = this._reflectName(event);\n        this.autoBlur.emit(event);\n        this.blur.emit(event);\n    }\n    _reflectName(event) {\n        if (typeof event.srcElement.attributes['ng-reflect-name'] === 'object') {\n            event.srcElement.name = event.srcElement.attributes['ng-reflect-name'].value;\n        }\n        return event;\n    }\n    /**\n     * Register onChangeCallback\n     *\n     * @param fn\n     */\n    registerOnChange(fn) {\n        this.onChangeCallback = fn;\n    }\n    /**\n     * Register onTouchedCallback\n     *\n     * @param fn\n     */\n    registerOnTouched(fn) {\n        this.onTouchedCallback = fn;\n    }\n    /**\n     * Remove already selected suggestions\n     *\n     * @param suggestions\n     */\n    removeDuplicates(suggestions) {\n        const selectedCount = this.selected ? this.selected.length : 0;\n        const suggestionCount = suggestions.length;\n        for (let i = 0; i < selectedCount; i++) {\n            const selectedLabel = this.getLabel(this.selected[i]);\n            for (let j = 0; j < suggestionCount; j++) {\n                const suggestedLabel = this.getLabel(suggestions[j]);\n                if (selectedLabel === suggestedLabel) {\n                    suggestions.splice(j, 1);\n                }\n            }\n        }\n        return suggestions;\n    }\n    removeExcluded(suggestions) {\n        const excludedCount = this.exclude.length;\n        for (let i = 0; i < excludedCount; i++) {\n            let excludeLabel = this.exclude[i];\n            if (typeof excludeLabel === 'object') {\n                excludeLabel = this.getLabel(excludeLabel);\n            }\n            const suggestionCount = suggestions.length;\n            for (let j = 0; j < suggestionCount; j++) {\n                const suggestedLabel = this.getLabel(suggestions[j]);\n                if (excludeLabel === suggestedLabel) {\n                    suggestions.splice(j, 1);\n                    break;\n                }\n            }\n        }\n        return suggestions;\n    }\n    /**\n     * Remove item from selected\n     *\n     * @param selection\n     * @param notify?\n     */\n    removeItem(selection, notify) {\n        const count = this.selected ? this.selected.length : 0;\n        for (let i = 0; i < count; i++) {\n            const item = this.selected[i];\n            const selectedLabel = this.getLabel(selection);\n            const itemLabel = this.getLabel(item);\n            if (selectedLabel === itemLabel) {\n                this.selected.splice(i, 1);\n            }\n        }\n        notify = typeof notify === 'undefined' ? true : notify;\n        if (notify) {\n            this.itemRemoved.emit(selection);\n            this.itemsChange.emit(this.selected);\n        }\n        this.modelChange.emit(this.selected);\n    }\n    /**\n     * Select item from list\n     *\n     * @param selection\n     **/\n    selectItem(selection) {\n        this.keyword = this.getLabel(selection);\n        this.formValue = this.getFormValue(selection);\n        this.hideItemList();\n        this.updateModel(this.formValue);\n        if (this.hideListOnSelection) {\n            this.hideItemList();\n        }\n        if (this.multi) {\n            if (this.maxSelected === null || this.selected.length <= this.maxSelected) {\n                this.clearValue();\n                this.selected.push(selection);\n                this.itemsChange.emit(this.selected);\n            }\n            else {\n                return;\n            }\n        }\n        else {\n            this.selection = selection;\n            this.selected = [selection];\n            this.itemsChange.emit(selection);\n        }\n        this.itemSelected.emit(selection);\n        this.modelChange.emit(this.selected);\n    }\n    /**\n     * Set focus of searchbar\n     */\n    setFocus() {\n        if (this.searchbarElem) {\n            this.searchbarElem.nativeElement.setFocus();\n        }\n    }\n    /**\n     * Set suggestions\n     *\n     * @param suggestions\n     * @param show\n     */\n    setSuggestions(suggestions, show) {\n        if (this.removeDuplicateSuggestions) {\n            suggestions = this.removeDuplicates(suggestions);\n            suggestions = this.removeExcluded(suggestions);\n        }\n        this.suggestions = suggestions;\n        if (show || typeof show === 'undefined') {\n            this.showItemList();\n        }\n    }\n    /**\n     * Set current input value\n     *\n     * @param selection\n     */\n    setValue(selection) {\n        this.formValue = this.getFormValue(selection);\n        this.keyword = this.getLabel(selection);\n        return;\n    }\n    /**\n     * Show item list\n     */\n    showItemList() {\n        this.showList = true;\n    }\n    /**\n     * Update the model\n     */\n    updateModel(enteredText) {\n        if (enteredText !== this.formValue) {\n            this.formValue = enteredText;\n            if (!this.multi) {\n                this.selected = null;\n            }\n        }\n        if (this.onChangeCallback) {\n            this.onChangeCallback(this.formValue);\n        }\n        this.modelChange.emit(this.selected);\n    }\n    /**\n     * Write value\n     *\n     * @param value\n     */\n    writeValue(value) {\n        if (value !== this.selection) {\n            this.selection = value || null;\n            this.formValue = this.getFormValue(this.selection);\n            this.keyword = this.getLabel(this.selection);\n        }\n    }\n};\nAutoCompleteComponent.ctorParameters = () => [\n    { type: Renderer2 }\n];\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"alwaysShowList\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"enableBrowserAutoComplete\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"clearInvalidInput\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"dataProvider\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"disabled\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"emptyTemplate\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"exclude\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"frontIcon\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"hideListOnSelection\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"keyword\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"location\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"maxResults\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"maxSelected\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"multi\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"name\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"options\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"removeButtonClasses\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"removeButtonColor\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"removeButtonIcon\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"removeButtonSlot\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"removeDuplicateSuggestions\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"selectionTemplate\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"showResultsFirst\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"styles\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"template\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"useIonInput\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"model\", null);\n__decorate([\n    Output()\n], AutoCompleteComponent.prototype, \"modelChange\", void 0);\n__decorate([\n    Input()\n], AutoCompleteComponent.prototype, \"eager\", null);\n__decorate([\n    Output()\n], AutoCompleteComponent.prototype, \"blur\", void 0);\n__decorate([\n    Output()\n], AutoCompleteComponent.prototype, \"autoFocus\", void 0);\n__decorate([\n    Output()\n], AutoCompleteComponent.prototype, \"autoBlur\", void 0);\n__decorate([\n    Output()\n], AutoCompleteComponent.prototype, \"focus\", void 0);\n__decorate([\n    Output()\n], AutoCompleteComponent.prototype, \"ionAutoInput\", void 0);\n__decorate([\n    Output()\n], AutoCompleteComponent.prototype, \"itemsChange\", void 0);\n__decorate([\n    Output()\n], AutoCompleteComponent.prototype, \"itemsCleared\", void 0);\n__decorate([\n    Output()\n], AutoCompleteComponent.prototype, \"itemsHidden\", void 0);\n__decorate([\n    Output()\n], AutoCompleteComponent.prototype, \"itemRemoved\", void 0);\n__decorate([\n    Output()\n], AutoCompleteComponent.prototype, \"itemSelected\", void 0);\n__decorate([\n    Output()\n], AutoCompleteComponent.prototype, \"itemsShown\", void 0);\n__decorate([\n    ViewChild('searchbarElem', {\n        read: ElementRef,\n        static: false\n    })\n], AutoCompleteComponent.prototype, \"searchbarElem\", void 0);\n__decorate([\n    ViewChild('inputElem', {\n        read: ElementRef,\n        static: false\n    })\n], AutoCompleteComponent.prototype, \"inputElem\", void 0);\n__decorate([\n    HostListener('document:click', ['$event'])\n], AutoCompleteComponent.prototype, \"documentClickHandler\", null);\nAutoCompleteComponent = AutoCompleteComponent_1 = __decorate([\n    Component({\n        providers: [\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: AutoCompleteComponent_1,\n                multi: true\n            }\n        ],\n        selector: 'ion-auto-complete',\n        template: \"<ng-template #defaultSelection\\n             let-attrs=\\\"attrs\\\">\\n    <ion-chip class=\\\"{{ attrs.removeButtonClasses }}\\\"\\n              [color]=\\\"attrs.removeButtonColor\\\"\\n              [outline]=\\\"true\\\">\\n        <ion-icon *ngIf=\\\"frontIcon\\\"\\n                  [name]=\\\"frontIcon\\\"\\n                  [slot]=\\\"'start'\\\"\\n                  color=\\\"primary\\\"></ion-icon>\\n\\n        <ion-label>{{ attrs.label }}</ion-label>\\n\\n        <ion-icon *ngIf=\\\"attrs.removeButtonIcon\\\"\\n                  [name]=\\\"attrs.removeButtonIcon\\\"\\n                  [slot]=\\\"attrs.removeButtonSlot\\\"></ion-icon>\\n    </ion-chip>\\n</ng-template>\\n\\n<div *ngIf=\\\"multi\\\">\\n    <div *ngFor=\\\"let item of selected\\\"\\n         class=\\\"selected-items\\\"\\n         (click)=\\\"removeItem(item)\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"selectionTemplate || defaultSelection\\\"\\n                     [ngTemplateOutletContext]=\\\"{\\n                            attrs: {\\n                              data:                item,\\n                              label:               getLabel(item),\\n                              removeButtonClasses: removeButtonClasses,\\n                              removeButtonColor:   removeButtonColor,\\n                              removeButtonIcon:    removeButtonIcon,\\n                              removeButtonSlot:    removeButtonSlot\\n                            }\\n                         }\\\"></ng-template>\\n    </div>\\n</div>\\n\\n<ion-input #inputElem\\n           [autocomplete]=\\\"enableBrowserAutoComplete ? 'on' : 'off'\\\"\\n           [name]=\\\"name\\\"\\n           (keyup)=\\\"keyupIonInput($event)\\\"\\n           (tap)=\\\"handleTap($event)\\\"\\n           [(ngModel)]=\\\"keyword\\\"\\n           (ngModelChange)=\\\"updateModel($event)\\\"\\n           [placeholder]=\\\"options.placeholder == null ? defaultOpts.placeholder : options.placeholder\\\"\\n           [type]=\\\"options.type == null ? defaultOpts.type : options.type\\\"\\n           [clearOnEdit]=\\\"options.clearOnEdit == null ? defaultOpts.clearOnEdit : options.clearOnEdit\\\"\\n           [clearInput]=\\\"options.clearInput == null ? defaultOpts.clearInput : options.clearInput\\\"\\n           [color]=\\\"options.color == null ? null : options.color\\\"\\n           [mode]=\\\"options.mode == null ? defaultOpts.mode : options.mode\\\"\\n           [disabled]=\\\"disabled || (this.maxSelected !== null && this.selected.length >= this.maxSelected)\\\"\\n           [ngClass]=\\\"{ 'hidden': !useIonInput, 'loading': isLoading }\\\"\\n           [ngStyle]=\\\"styles.searchbar\\\"\\n           (keyup.arrowDown)=\\\"highlightItem(-1)\\\"\\n           (keyup.arrowUp)=\\\"highlightItem(1)\\\"\\n           (keyup.enter)=\\\"handleSelectTap($event, suggestions[focusedOption])\\\"\\n           (keyup.escape)=\\\"hideItemList()\\\"\\n           (ionFocus)=\\\"onFocus($event)\\\"\\n           (ionBlur)=\\\"onBlur($event)\\\"></ion-input>\\n\\n<ion-searchbar #searchbarElem\\n               [autocomplete]=\\\"enableBrowserAutoComplete ? 'on' : 'off'\\\"\\n               [name]=\\\"name\\\"\\n               [animated]=\\\"options.animated == null ? defaultOpts.animated : options.animated\\\"\\n               (ionInput)=\\\"keyupIonSearchbar($event)\\\"\\n               (tap)=\\\"handleTap($event)\\\"\\n               [(ngModel)]=\\\"keyword\\\"\\n               (ngModelChange)=\\\"updateModel($event)\\\"\\n               [cancelButtonIcon]=\\\"options.cancelButtonIcon == null ? defaultOpts.cancelButtonIcon : options.cancelButtonIcon\\\"\\n               [cancelButtonText]=\\\"options.cancelButtonText == null ? defaultOpts.cancelButtonText : options.cancelButtonText\\\"\\n               [clearIcon]=\\\"options.clearIcon == null ? defaultOpts.clearIcon : options.clearIcon\\\"\\n               [color]=\\\"options.color == null ? null : options.color\\\"\\n               [showCancelButton]=\\\"options.showCancelButton == null ?\\n                                        (defaultOpts.showCancelButton ? 'always' : 'never') :\\n                                        (options.showCancelButton ? 'always' : 'never')\\\"\\n               [debounce]=\\\"options.debounce == null ? defaultOpts.debounce : options.debounce\\\"\\n               [placeholder]=\\\"options.placeholder == null ? defaultOpts.placeholder : options.placeholder\\\"\\n               [autocorrect]=\\\"options.autocorrect == null ? defaultOpts.autocorrect : options.autocorrect\\\"\\n               [mode]=\\\"options.mode == null ? defaultOpts.mode : options.mode\\\"\\n               [searchIcon]=\\\"options.searchIcon == null ? defaultOpts.searchIcon : options.searchIcon\\\"\\n               [spellcheck]=\\\"options.spellcheck == null ? defaultOpts.spellcheck : options.spellcheck\\\"\\n               [type]=\\\"options.type == null ? defaultOpts.type : options.type\\\"\\n               [ngClass]=\\\"{ 'hidden': useIonInput, 'loading': isLoading, 'disabled': disabled || (this.maxSelected !== null && this.selected.length >= this.maxSelected) }\\\"\\n               [ngStyle]=\\\"styles.searchbar\\\"\\n               (keyup.arrowDown)=\\\"highlightItem(-1)\\\"\\n               (keyup.arrowUp)=\\\"highlightItem(1)\\\"\\n               (keyup.enter)=\\\"handleSelectTap($event, suggestions[focusedOption])\\\"\\n               (keyup.escape)=\\\"hideItemList()\\\"\\n               (ionClear)=\\\"clickClear()\\\"\\n               (ionFocus)=\\\"onFocus($event)\\\"\\n               (ionBlur)=\\\"onBlur($event)\\\"></ion-searchbar>\\n\\n<ng-template #defaultTemplate\\n             let-attrs=\\\"attrs\\\">\\n    <span [innerHTML]='attrs.label | boldprefix:attrs.keyword'></span>\\n</ng-template>\\n\\n<ng-template #defaultEmptyTemplate\\n             let-attrs=\\\"attrs\\\"\\n             class=\\\"ion-text-center\\\">\\n    {{ options.noItems }}\\n</ng-template>\\n\\n<ul *ngIf=\\\"!(disabled || (this.maxSelected !== null && this.selected.length >= this.maxSelected)) && suggestions.length > 0 && showList\\\"\\n    [ngStyle]=\\\"listStyles()\\\">\\n    <li *ngFor=\\\"let suggestion of suggestions| slice:0:maxResults; let index = index\\\"\\n        [ngClass]=\\\"{ 'focus': focusedOption === index }\\\"\\n        [ngStyle]=\\\"styles.listItem\\\"\\n        (click)=\\\"handleSelectTap($event, suggestion)\\\"\\n        (tap)=\\\"handleSelectTap($event, suggestion)\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"template || defaultTemplate\\\"\\n                     [ngTemplateOutletContext]=\\\"{\\n                        attrs:{\\n                          data:               suggestion,\\n                          label:              getLabel(suggestion),\\n                          keyword:            keyword,\\n                          formValue:          getFormValue(suggestion),\\n                          labelAttribute:     getLabel(suggestion),\\n                          formValueAttribute: getFormValue(suggestion)\\n                        }\\n                     }\\\"></ng-template>\\n    </li>\\n</ul>\\n\\n<ul *ngIf=\\\"suggestions.length === 0 && showList && options.noItems\\\"\\n    [ngStyle]=\\\"listStyles()\\\">\\n    <li [ngStyle]=\\\"styles.listItem\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"emptyTemplate || defaultEmptyTemplate\\\"\\n                     [ngTemplateOutletContext]=\\\"{\\n                        attrs:{\\n                          keyword: keyword\\n                        }\\n                     }\\\"></ng-template>\\n    </li>\\n</ul>\\n\",\n        styles: [\"ion-auto-complete{overflow:hidden!important;width:90vw;display:inline-block}ion-auto-complete ion-searchbar{padding:1px!important}ion-auto-complete .disabled input.searchbar-input{pointer-events:none;cursor:default}ion-auto-complete ul{position:absolute;width:90vw;margin-top:0;background:#fff;list-style-type:none;padding:0;left:16px;z-index:999;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12)}ion-auto-complete ul li{padding:15px;border-bottom:1px solid #c1c1c1}ion-auto-complete ul ion-auto-complete-item{height:40px;width:100%}ion-auto-complete ul li:last-child{border:none}ion-auto-complete ul li.focus,ion-auto-complete ul li:focus,ion-auto-complete ul li:hover{cursor:pointer;background:#f1f1f1}ion-auto-complete .hidden{display:none}ion-auto-complete .loading input.searchbar-input{background:url(/assets/loading.gif) right 4px center/25px 25px no-repeat #fff}ion-auto-complete .searchbar-clear-button.sc-ion-searchbar-md{right:34px}ion-auto-complete .selected-items{float:left}\"]\n    })\n], AutoCompleteComponent);\n\n/**\n * Bolds the beginning of the matching string in the item\n */\nlet BoldPrefix = class BoldPrefix {\n    transform(value, keyword) {\n        if (!keyword) {\n            return value;\n        }\n        let escaped_keyword = keyword.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        return value.replace(new RegExp(escaped_keyword, 'gi'), function (str) {\n            return str.bold();\n        });\n    }\n};\nBoldPrefix = __decorate([\n    Pipe({\n        name: 'boldprefix'\n    }),\n    Injectable()\n], BoldPrefix);\n\nvar AutoCompleteModule_1;\nlet AutoCompleteModule = AutoCompleteModule_1 = class AutoCompleteModule {\n    static forRoot() {\n        return {\n            ngModule: AutoCompleteModule_1,\n            providers: []\n        };\n    }\n};\nAutoCompleteModule = AutoCompleteModule_1 = __decorate([\n    NgModule({\n        declarations: [\n            AutoCompleteComponent,\n            BoldPrefix\n        ],\n        exports: [\n            AutoCompleteComponent,\n            BoldPrefix\n        ],\n        imports: [\n            CommonModule,\n            FormsModule,\n            IonicModule\n        ]\n    })\n], AutoCompleteModule);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutoCompleteComponent, AutoCompleteModule, AutoCompleteOptions, BoldPrefix };\n//# sourceMappingURL=ionic4-auto-complete.js.map\n","export default \"<ng-template #empty\\n             let-attrs=\\\"attrs\\\">\\n    <ion-text class=\\\"ion-text-right ion-padding-vertical\\\">That country does not exist!</ion-text>\\n</ng-template>\\n\\n<ng-template #selection\\n             let-attrs=\\\"attrs\\\">\\n        <ion-img class=\\\"flag ion-float-left ion-margin-horizontal\\\"\\n                 style=\\\"height: 50px;\\\"\\n                 [slot]=\\\"'start'\\\"\\n                 [src]=\\\"attrs.data.flag\\\"></ion-img>\\n</ng-template>\\n\\n<ng-template #suggestions\\n             let-attrs=\\\"attrs\\\">\\n    <ion-item>\\n        <ion-img class=\\\"flag\\\"\\n                 [slot]=\\\"'start'\\\"\\n                 [src]=\\\"attrs.data.flag\\\"></ion-img>\\n\\n        <ion-text>\\n            <span [innerHtml]=\\\"attrs.data.name | boldprefix:attrs.keyword\\\"></span> ({{ attrs.data.nativeName }})\\n        </ion-text>\\n    </ion-item>\\n</ng-template>\\n\\n<ion-auto-complete [(model)]=\\\"selected\\\"\\n                   [eager]=\\\"true\\\"\\n                   [multi]=\\\"true\\\"\\n                   [dataProvider]=\\\"provider\\\"\\n                   [disabled]=\\\"false\\\"\\n                   [maxSelected]=\\\"3\\\"\\n                   [template]=\\\"suggestions\\\"\\n                   [emptyTemplate]=\\\"empty\\\"\\n                   [selectionTemplate]=\\\"selection\\\"\\n                   (blur)=\\\"on('blur', $event)\\\"\\n                   (autoFocus)=\\\"on('autoFocus', $event)\\\"\\n                   (autoBlur)=\\\"on('autoBlur', $event)\\\"\\n                   (focus)=\\\"on('focus', $event)\\\"\\n                   (ionAutoInput)=\\\"on('ionAutoInput', $event)\\\"\\n                   (itemsChange)=\\\"on('itemsChange', $event)\\\"\\n                   (itemsCleared)=\\\"on('itemsCleared', $event)\\\"\\n                   (itemsHidden)=\\\"on('itemsHidden', $event)\\\"\\n                   (itemRemoved)=\\\"on('itemRemoved', $event)\\\"\\n                   (itemSelected)=\\\"on('itemSelected', $event)\\\"\\n                   (itemsShown)=\\\"on('itemsShown', $event)\\\"></ion-auto-complete>\\n\"","export default \"<ion-row>\\n    <ion-col [size]=\\\"12\\\">\\n        <ion-card style=\\\"overflow: inherit; padding: 15px;\\\">\\n            <ion-card-title class=\\\"ion-text-center\\\">\\n                Include\\n            </ion-card-title>\\n\\n            <ion-item style=\\\"overflow: inherit;\\\">\\n                <ion-auto-complete [(model)]=\\\"selected\\\"\\n                                   [multi]=\\\"true\\\"\\n                                   [dataProvider]=\\\"provider\\\"\\n                                   [disabled]=\\\"false\\\"\\n                                   [exclude]=\\\"excluded\\\"\\n                                   [options]=\\\"selectedOptions\\\"\\n                                   [removeButtonIcon]=\\\"'assets/icons/clear.svg'\\\"\\n                                   [removeButtonColor]=\\\"'dark'\\\"\\n                                   [useIonInput]=\\\"false\\\"\\n                                   (blur)=\\\"on('blur', $event)\\\"\\n                                   (autoFocus)=\\\"on('autoFocus', $event)\\\"\\n                                   (autoBlur)=\\\"on('autoBlur', $event)\\\"\\n                                   (focus)=\\\"on('focus', $event)\\\"\\n                                   (ionAutoInput)=\\\"on('ionAutoInput', $event)\\\"\\n                                   (itemsChange)=\\\"on('itemsChange', $event)\\\"\\n                                   (itemsCleared)=\\\"on('itemsCleared', $event)\\\"\\n                                   (itemsHidden)=\\\"on('itemsHidden', $event)\\\"\\n                                   (itemRemoved)=\\\"on('itemRemoved', $event)\\\"\\n                                   (itemSelected)=\\\"on('itemSelected', $event)\\\"\\n                                   (itemsShown)=\\\"on('itemsShown', $event)\\\"></ion-auto-complete>\\n            </ion-item>\\n        </ion-card>\\n    </ion-col>\\n</ion-row>\\n\\n<ion-row>\\n    <ion-col [size]=\\\"12\\\">\\n        <ion-card style=\\\"overflow: inherit; padding: 15px;\\\">\\n            <ion-card-title class=\\\"ion-text-center\\\">\\n                Exclude\\n            </ion-card-title>\\n\\n            <ion-item style=\\\"overflow: inherit;\\\">\\n                <ion-auto-complete [(model)]=\\\"excluded\\\"\\n                                   [multi]=\\\"true\\\"\\n                                   [dataProvider]=\\\"provider\\\"\\n                                   [disabled]=\\\"false\\\"\\n                                   [exclude]=\\\"selected\\\"\\n                                   [options]=\\\"excludedOptions\\\"\\n                                   [removeButtonIcon]=\\\"'assets/icons/clear.svg'\\\"\\n                                   [removeButtonColor]=\\\"'dark'\\\"\\n                                   [useIonInput]=\\\"true\\\"\\n                                   (blur)=\\\"on('blur', $event)\\\"\\n                                   (autoFocus)=\\\"on('autoFocus', $event)\\\"\\n                                   (autoBlur)=\\\"on('autoBlur', $event)\\\"\\n                                   (focus)=\\\"on('focus', $event)\\\"\\n                                   (ionAutoInput)=\\\"on('ionAutoInput', $event)\\\"\\n                                   (itemsChange)=\\\"on('itemsChange', $event)\\\"\\n                                   (itemsCleared)=\\\"on('itemsCleared', $event)\\\"\\n                                   (itemsHidden)=\\\"on('itemsHidden', $event)\\\"\\n                                   (itemRemoved)=\\\"on('itemRemoved', $event)\\\"\\n                                   (itemSelected)=\\\"on('itemSelected', $event)\\\"\\n                                   (itemsShown)=\\\"on('itemsShown', $event)\\\"></ion-auto-complete>\\n            </ion-item>\\n        </ion-card>\\n    </ion-col>\\n</ion-row>\\n\"","export default \"<ion-auto-complete [(model)]=\\\"selected\\\"\\n                   [multi]=\\\"false\\\"\\n                   [dataProvider]=\\\"provider\\\"\\n                   [disabled]=\\\"false\\\"\\n                   [options]=\\\"options\\\"\\n                   [removeButtonIcon]=\\\"'assets/icons/clear.svg'\\\"\\n                   [removeButtonColor]=\\\"'dark'\\\"\\n                   (blur)=\\\"on('blur', $event)\\\"\\n                   (autoFocus)=\\\"on('autoFocus', $event)\\\"\\n                   (autoBlur)=\\\"on('autoBlur', $event)\\\"\\n                   (focus)=\\\"on('focus', $event)\\\"\\n                   (ionAutoInput)=\\\"on('ionAutoInput', $event)\\\"\\n                   (itemsChange)=\\\"on('itemsChange', $event)\\\"\\n                   (itemsCleared)=\\\"on('itemsCleared', $event)\\\"\\n                   (itemsHidden)=\\\"on('itemsHidden', $event)\\\"\\n                   (itemRemoved)=\\\"on('itemRemoved', $event)\\\"\\n                   (itemSelected)=\\\"on('itemSelected', $event)\\\"\\n                   (itemsShown)=\\\"on('itemsShown', $event)\\\"></ion-auto-complete>\\n\"","export default \"<ion-auto-complete [(model)]=\\\"selected\\\"\\n                   [multi]=\\\"false\\\"\\n                   [dataProvider]=\\\"provider\\\"\\n                   [disabled]=\\\"false\\\"\\n                   [maxResults]=\\\"6\\\"\\n                   [removeButtonColor]=\\\"'dark'\\\"\\n                   (ionAutoInput)=\\\"on('ionAutoInput', $event)\\\"\\n                   (itemsChange)=\\\"on('itemsChange', $event)\\\"\\n                   (itemsCleared)=\\\"on('itemsCleared', $event)\\\"\\n                   (itemsHidden)=\\\"on('itemsHidden', $event)\\\"\\n                   (itemRemoved)=\\\"on('itemRemoved', $event)\\\"\\n                   (itemSelected)=\\\"on('itemSelected', $event)\\\"\\n                   (itemsShown)=\\\"on('itemsShown', $event)\\\"></ion-auto-complete>\\n\\n<ion-button [size]=\\\"'full'\\\"\\n            (click)=\\\"random()\\\">\\n    Random\\n</ion-button>\\n\"","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Demo: ionic4-auto-complete\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list style=\\\"height: 100%;\\\">\\n    <ion-segment (ionChange)=\\\"onClickSegment($event)\\\">\\n      <ion-segment-button *ngFor=\\\"let segment of segments\\\"\\n                          [value]=\\\"segment.key\\\"\\n                          [checked]=\\\"segment.key === selectedSegment\\\">\\n        <ion-label>\\n          {{ segment.label }}\\n        </ion-label>\\n      </ion-segment-button>\\n    </ion-segment>\\n\\n    <ion-item-divider></ion-item-divider>\\n\\n    <ion-card *ngIf=\\\"selectedSegment === 'simple-function'\\\"\\n              style=\\\"height: 100%;\\\">\\n      <ion-card-content>\\n        <ion-row>\\n          <ion-col class=\\\"label\\\">\\n            Select Anybody\\n          </ion-col>\\n          <ion-col [size]=\\\"12\\\">\\n            <simple-function></simple-function>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"selectedSegment === 'simple-service'\\\"\\n              style=\\\"height: 100%;\\\">\\n      <ion-card-content>\\n        <ion-row>\\n          <ion-col class=\\\"label\\\">\\n            Select Any Country\\n          </ion-col>\\n          <ion-col [size]=\\\"12\\\">\\n            <simple-service></simple-service>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"selectedSegment === 'multi-function'\\\"\\n              style=\\\"height: 100%;\\\">\\n      <ion-card-content>\\n        <ion-row>\\n          <ion-col class=\\\"label\\\">\\n            Select Multiple People\\n          </ion-col>\\n          <ion-col [size]=\\\"12\\\">\\n            <multi-function></multi-function>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"selectedSegment === 'custom-template'\\\"\\n              style=\\\"height: 100%;\\\">\\n      <ion-card-content>\\n        <ion-row>\\n          <ion-col class=\\\"label\\\">\\n            Select up to 3 Countries\\n          </ion-col>\\n          <ion-col [size]=\\\"12\\\">\\n            <custom-template></custom-template>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-list>\\n</ion-content>\\n\"","export default \".flag {\\n  width: 50px;\\n  height: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qcnF1aWNrL2RldmVsb3BtZW50L2VuY291bnRpbmcvaW9uaWM0LWF1dG8tY29tcGxldGUvZGVtby9zcmMvYXBwL2NvbXBvbmVudHMvY3VzdG9tLXRlbXBsYXRlL2N1c3RvbS10ZW1wbGF0ZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9jdXN0b20tdGVtcGxhdGUvY3VzdG9tLXRlbXBsYXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3VzdG9tLXRlbXBsYXRlL2N1c3RvbS10ZW1wbGF0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mbGFnIHtcbiAgd2lkdGg6IDUwcHg7XG4gIGhlaWdodDogNTBweDtcbn1cbiIsIi5mbGFnIHtcbiAgd2lkdGg6IDUwcHg7XG4gIGhlaWdodDogNTBweDtcbn0iXX0= */\"","import {Component} from '@angular/core';\n\nimport {AutoCompleteOptions} from 'ionic4-auto-complete';\n\nimport {SimpleService} from '../../services/simple-service.service';\n\n@Component({\n  selector:    'custom-template',\n  templateUrl: 'custom-template.component.html',\n  styleUrls: [\n    'custom-template.component.scss'\n  ]\n})\nexport class CustomTemplateComponent {\n  public options:AutoCompleteOptions;\n\n  public selected:string[] = [];\n\n  constructor(\n      public provider:SimpleService\n  ) {\n    this.options = new AutoCompleteOptions();\n\n    this.options.autocomplete = 'on';\n    this.options.debounce = 750;\n    this.options.placeholder = 'Type text to search..';\n    this.options.type = 'add-friend.svg';\n  }\n\n  on(output, event):void {\n    console.log(output);\n    // console.log(event);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\n\nimport {AutoCompleteModule} from 'ionic4-auto-complete';\n\nimport {CustomTemplateComponent} from './custom-template.component';\n\nimport {SimpleFunction} from '../../services/simple-function.service';\n\n@NgModule({\n  declarations: [\n    CustomTemplateComponent\n  ],\n  entryComponents: [\n    CustomTemplateComponent\n  ],\n  exports: [\n    CustomTemplateComponent\n  ],\n  imports: [\n    AutoCompleteModule,\n    CommonModule,\n    FormsModule,\n    IonicModule\n  ],\n  providers: [\n    SimpleFunction\n  ]\n})\nexport class CustomTemplateModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbXVsdGktZnVuY3Rpb24vbXVsdGktZnVuY3Rpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import {Component} from '@angular/core';\n\nimport {AutoCompleteOptions} from 'ionic4-auto-complete';\n\nimport {SimpleFunction} from '../../services/simple-function.service';\n\n@Component({\n  selector:    'multi-function',\n  templateUrl: 'multi-function.component.html',\n  styleUrls: [\n    'multi-function.component.scss'\n  ]\n})\nexport class MultiFunctionComponent {\n  public excludedOptions:AutoCompleteOptions;\n  public selectedOptions:AutoCompleteOptions;\n\n  public excluded:string[] = [];\n  public selected:string[] = [];\n\n  constructor(\n    public provider:SimpleFunction\n  ) {\n    this.selectedOptions = new AutoCompleteOptions();\n    this.selectedOptions.autocomplete = 'on';\n    this.selectedOptions.debounce = 750;\n    this.selectedOptions.placeholder = 'Filter and select multiple..';\n    this.selectedOptions.searchIcon = 'assets/icons/add-user.svg';\n    this.selectedOptions.type = 'search';\n\n    this.excludedOptions = new AutoCompleteOptions();\n    this.excludedOptions.autocomplete = 'on';\n    this.excludedOptions.debounce = 750;\n    this.excludedOptions.placeholder = 'Filter and select multiple to exclude..';\n    this.excludedOptions.searchIcon = 'assets/icons/add-user.svg';\n    this.excludedOptions.type = 'search';\n  }\n\n  on(output, event):void {\n    console.log(output);\n    // console.log(event);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\n\nimport {AutoCompleteModule} from 'ionic4-auto-complete';\n\nimport {MultiFunctionComponent} from './multi-function.component';\n\nimport {SimpleFunction} from '../../services/simple-function.service';\n\n@NgModule({\n  declarations: [\n    MultiFunctionComponent\n  ],\n  entryComponents: [\n    MultiFunctionComponent\n  ],\n  exports: [\n    MultiFunctionComponent\n  ],\n  imports: [\n    AutoCompleteModule,\n    CommonModule,\n    FormsModule,\n    IonicModule\n  ],\n  providers: [\n    SimpleFunction\n  ]\n})\nexport class MultiFunctionModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2ltcGxlLWZ1bmN0aW9uL3NpbXBsZS1mdW5jdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component} from '@angular/core';\n\nimport {AutoCompleteOptions} from 'ionic4-auto-complete';\n\nimport {SimpleFunction} from '../../services/simple-function.service';\n\n@Component({\n  selector:    'simple-function',\n  templateUrl: 'simple-function.component.html',\n  styleUrls: [\n    'simple-function.component.scss'\n  ]\n})\nexport class SimpleFunctionComponent {\n  public options:AutoCompleteOptions;\n\n  public selected:string = '';\n\n  constructor(\n    public provider:SimpleFunction\n  ) {\n    this.options = new AutoCompleteOptions();\n\n    this.options.autocomplete = 'on';\n    this.options.cancelButtonIcon = 'assets/icons/clear.svg';\n    this.options.clearIcon = 'assets/icons/clear.svg';\n    this.options.debounce = 750;\n    this.options.placeholder = 'Type text to search..';\n    this.options.searchIcon = 'assets/icons/add-user.svg';\n    this.options.type = 'search';\n  }\n\n  on(output, event):void {\n    console.log(output);\n    // console.log(event);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\n\nimport {AutoCompleteModule} from 'ionic4-auto-complete';\n\nimport {SimpleFunctionComponent} from './simple-function.component';\n\nimport {SimpleFunction} from '../../services/simple-function.service';\n\n@NgModule({\n  declarations: [\n    SimpleFunctionComponent\n  ],\n  entryComponents: [\n    SimpleFunctionComponent\n  ],\n  exports: [\n    SimpleFunctionComponent\n  ],\n  imports: [\n    AutoCompleteModule,\n    CommonModule,\n    FormsModule,\n    IonicModule\n  ],\n  providers: [\n    SimpleFunction\n  ]\n})\nexport class SimpleFunctionModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2ltcGxlLXNlcnZpY2Uvc2ltcGxlLXNlcnZpY2UuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component} from '@angular/core';\n\nimport {AutoCompleteOptions} from 'ionic4-auto-complete';\n\nimport {SimpleService} from '../../services/simple-service.service';\n\n@Component({\n  selector:    'simple-service',\n  templateUrl: 'simple-service.component.html',\n  styleUrls: [\n    'simple-service.component.scss'\n  ]\n})\nexport class SimpleServiceComponent {\n  public options:AutoCompleteOptions;\n\n  public selected:string = '';\n\n  constructor(\n    public provider:SimpleService\n  ) {\n    this.options = new AutoCompleteOptions();\n\n    this.options.autocomplete = 'on';\n    this.options.debounce = 750;\n    this.options.placeholder = 'Type text to search..';\n    this.options.type = 'add-friend.svg';\n  }\n\n  random():void {\n    this.provider.getResults().subscribe(\n      (results) => {\n        const count = results.length;\n\n        this.selected = results[Math.round(Math.random() * count)]\n      }\n    );\n  }\n\n  on(output, event):void {\n    console.log(output);\n    // console.log(event);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\n\nimport {AutoCompleteModule} from 'ionic4-auto-complete';\n\nimport {SimpleServiceComponent} from './simple-service.component';\n\nimport {SimpleService} from '../../services/simple-service.service';\n\n@NgModule({\n  declarations: [\n    SimpleServiceComponent\n  ],\n  entryComponents: [\n    SimpleServiceComponent\n  ],\n  exports: [\n    SimpleServiceComponent\n  ],\n  imports: [\n    AutoCompleteModule,\n    CommonModule,\n    FormsModule,\n    IonicModule\n  ],\n  providers: [\n    SimpleService\n  ]\n})\nexport class SimpleServiceModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {HomePage} from './home.page';\n\nimport {CustomTemplateModule} from '../../components/custom-template/custom-template.module';\nimport {MultiFunctionModule} from '../../components/multi-function/multi-function.module';\nimport {SimpleFunctionModule} from '../../components/simple-function/simple-function.module';\nimport {SimpleServiceModule} from '../../components/simple-service/simple-service.module';\n\n@NgModule({\n  declarations: [\n    HomePage\n  ],\n  imports: [\n    CommonModule,\n    CustomTemplateModule,\n    FormsModule,\n    IonicModule,\n    MultiFunctionModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ]),\n    SimpleFunctionModule,\n    SimpleServiceModule\n  ]\n})\nexport class HomePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2hvbWUvaG9tZS5wYWdlLnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\n\nimport {Segment} from '../../models/segment.model';\n\n@Component({\n  selector:    'home-page',\n  templateUrl: 'home.page.html',\n  styleUrls: [\n    'home.page.scss'\n  ],\n})\nexport class HomePage implements OnInit {\n  public segments:Segment[] = [\n    {\n      key:   'simple-function',\n      label: 'Simple Function'\n    },\n    {\n      key:   'simple-service',\n      label: 'Data Provider'\n    },\n    {\n      key:   'multi-function',\n      label: 'Multi Select'\n    },\n    {\n      key:   'custom-template',\n      label: 'Custom Template'\n    }\n  ];\n\n  public selectedSegment:string = this.segments[0].key;\n\n  constructor(\n      private route:ActivatedRoute,\n      private router:Router\n  ) {\n\n  }\n\n  ngOnInit():void {\n    this.route.fragment.subscribe(\n        (fragment) => {\n          this.setSegment(fragment);\n        }\n    );\n  }\n\n  onClickSegment(event:CustomEvent):void {\n    if (event.detail && typeof event.detail.value === 'string') {\n      const segment = event.detail.value;\n\n      this.setSegment(segment);\n    }\n  }\n\n  setSegment(segment:string):void {\n    if (typeof segment === 'string') {\n      segment = segment.toLowerCase();\n\n      const arrayHas = this.segments.some(\n        (candidate) => {\n          return candidate.key === segment;\n        }\n      );\n\n      if (arrayHas) {\n        this.selectedSegment = segment;\n\n        this.router.navigate(\n           [],\n           {\n             fragment: segment\n           }\n        ).then();\n      }\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {AutoCompleteService} from 'ionic4-auto-complete';\n\nimport {User} from '../models/user.model';\n\n@Injectable()\nexport class SimpleFunction implements AutoCompleteService {\n  labelAttribute = 'full_name';\n\n  public objects:User[] = [\n      {\n          first_name: 'Dominic',\n          last_name: 'Elliot',\n          full_name: 'Dominic Elliot',\n      },\n      {\n          first_name: 'Duke',\n          last_name: 'Ellington',\n          full_name: 'Duke Ellington',\n      },\n      {\n          first_name: 'Jeremy',\n          last_name: 'Quick',\n          full_name: 'Jeremy Quick',\n      },\n      {\n          first_name: 'Matt',\n          last_name: 'Smith',\n          full_name: 'Matt Smith',\n      },\n      {\n          first_name: 'Matthew',\n          last_name: 'Drake',\n          full_name: 'Matthew Drake',\n      },\n      {\n          first_name: 'Yu',\n          last_name: 'Lee',\n          full_name: 'Yu Lee',\n      },\n      {\n          first_name: 'Zach',\n          last_name: 'Smith',\n          full_name: 'Zach Smith',\n      }\n  ];\n\n  constructor() {\n\n  }\n\n  getResults(keyword) {\n    keyword = keyword.toLowerCase();\n\n    return this.objects.filter(\n      (object) => {\n         const value = object[this.labelAttribute].toLowerCase();\n\n         return value.includes(keyword);\n      }\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AutoCompleteService} from 'ionic4-auto-complete';\n\nimport {Country} from '../models/country.model';\n\n@Injectable()\nexport class SimpleService implements AutoCompleteService {\n  labelAttribute = 'name';\n\n  private countries:Country[] = [];\n\n  constructor(\n    private http:HttpClient\n  ) {\n\n  }\n\n  getResults(keyword?:string):Observable<any[]> {\n    keyword = typeof keyword === 'string' ? keyword : '';\n\n    let observable:Observable<any>;\n\n    if (this.countries.length === 0) {\n      observable = this.http.get('https://restcountries.eu/rest/v2/all').pipe(\n        map(\n          (results:Country[]) => {\n            if (results) {\n              this.countries = results;\n            }\n\n            return this.countries;\n          }\n        )\n      );\n    } else {\n      observable = of(this.countries);\n    }\n\n    return observable.pipe(\n      map(\n        (result) => {\n          return result.filter(\n            (item) => {\n              return item.name.toLowerCase().startsWith(\n                  keyword.toLowerCase()\n              );\n            }\n          );\n        }\n      )\n    );\n  }\n}\n"],"sourceRoot":"webpack:///","file":"pages-home-home-module-latest.js"}