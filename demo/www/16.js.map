{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/ion-checkbox-ios.entry.js"],"names":["checkboxIosCss","checkboxMdCss","Checkbox","hostRef","registerInstance","inputId","checkboxIds","name","checked","indeterminate","disabled","value","onClick","setFocus","onFocus","ionFocus","emit","onBlur","ionBlur","ionChange","createEvent","ionStyle","emitStyle","isChecked","buttonEl","focus","color","el","labelId","mode","getIonMode","label","findItemLabel","id","renderHiddenInput","path","h","d","part","Host","role","class","Object","assign","createColorClasses","hostContext","viewBox","type","ref","btnEl","getElement","style","ios","md"],"mappings":"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","file":"16.js","sourcesContent":["import { r as registerInstance, c as createEvent, h, H as Host, e as getElement } from './index-29df6f59.js';\nimport { b as getIonMode } from './ionic-global-08f4fb8a.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-5c745fbd.js';\nimport { c as createColorClasses, h as hostContext } from './theme-3f0b0c04.js';\n\nconst checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\n\nconst checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\n/**\n * @virtualProp {\"ios\" | \"md\"} mode - The mode determines which platform styles to use.\n *\n * @part container - The container for the checkbox mark.\n * @part mark - The checkmark used to indicate the checked state.\n */\nclass Checkbox {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-cb-${checkboxIds++}`;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the checkbox is selected.\n         */\n        this.checked = false;\n        /**\n         * If `true`, the checkbox will visually appear as indeterminate.\n         */\n        this.indeterminate = false;\n        /**\n         * If `true`, the user cannot interact with the checkbox.\n         */\n        this.disabled = false;\n        /**\n         * The value of the toggle does not mean if it's checked or not, use the `checked`\n         * property for that.\n         *\n         * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n         * it's only used when the toggle participates in a native `<form>`.\n         */\n        this.value = 'on';\n        this.onClick = () => {\n            this.setFocus();\n            this.checked = !this.checked;\n            this.indeterminate = false;\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    componentWillLoad() {\n        this.emitStyle();\n    }\n    checkedChanged(isChecked) {\n        this.ionChange.emit({\n            checked: isChecked,\n            value: this.value\n        });\n        this.emitStyle();\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'checkbox-checked': this.checked,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    setFocus() {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    }\n    render() {\n        const { inputId, indeterminate, disabled, checked, value, color, el } = this;\n        const labelId = inputId + '-lbl';\n        const mode = getIonMode(this);\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        renderHiddenInput(true, el, this.name, (checked ? value : ''), disabled);\n        let path = indeterminate\n            ? h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })\n            : h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" });\n        if (mode === 'md') {\n            path = indeterminate\n                ? h(\"path\", { d: \"M2 12H22\", part: \"mark\" })\n                : h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" });\n        }\n        return (h(Host, { onClick: this.onClick, role: \"checkbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: Object.assign(Object.assign({}, createColorClasses(color)), { [mode]: true, 'in-item': hostContext('ion-item', el), 'checkbox-checked': checked, 'checkbox-disabled': disabled, 'checkbox-indeterminate': indeterminate, 'interactive': true }) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: this.disabled, ref: btnEl => this.buttonEl = btnEl })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"checked\": [\"checkedChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n}\nlet checkboxIds = 0;\nCheckbox.style = {\n    /*STENCIL:MODE:ios*/ ios: checkboxIosCss,\n    /*STENCIL:MODE:md*/ md: checkboxMdCss\n};\n\nexport { Checkbox as ion_checkbox };\n"],"sourceRoot":"webpack:///"}