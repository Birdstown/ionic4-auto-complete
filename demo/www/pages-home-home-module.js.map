{"version":3,"sources":["./node_modules/ionic4-auto-complete/fesm5/ionic4-auto-complete.js","./src/app/components/custom-template/custom-template.component.html","./src/app/components/multi-function/multi-function.component.html","./src/app/components/simple-function/simple-function.component.html","./src/app/components/simple-service/simple-service.component.html","./src/app/pages/home/home.page.html","./src/app/components/custom-template/custom-template.component.scss","./src/app/components/custom-template/custom-template.component.ts","./src/app/components/custom-template/custom-template.module.ts","./src/app/components/multi-function/multi-function.component.scss","./src/app/components/multi-function/multi-function.component.ts","./src/app/components/multi-function/multi-function.module.ts","./src/app/components/simple-function/simple-function.component.scss","./src/app/components/simple-function/simple-function.component.ts","./src/app/components/simple-function/simple-function.module.ts","./src/app/components/simple-service/simple-service.component.scss","./src/app/components/simple-service/simple-service.component.ts","./src/app/components/simple-service/simple-service.module.ts","./src/app/pages/home/home.module.ts","./src/app/pages/home/home.page.scss","./src/app/pages/home/home.page.ts","./src/app/services/simple-function.service.ts","./src/app/services/simple-service.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AAC2F;AACzF;AACiB;AACnB;AACI;AACP;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC,6BAA6B,0DAAY;AACzC,wBAAwB,0DAAY;AACpC,yBAAyB,0DAAY;AACrC,gCAAgC,0DAAY;AAC5C,+BAA+B,0DAAY;AAC3C,gCAAgC,0DAAY;AAC5C,+BAA+B,0DAAY;AAC3C,+BAA+B,0DAAY;AAC3C,gCAAgC,0DAAY;AAC5C,8BAA8B,0DAAY;AAC1C,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,2BAA2B,gBAAgB;AAC3C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4CAAO;AAC7C;AACA;AACA;AACA,6BAA6B,iDAAI;AACjC;AACA,sCAAsC,+CAAU;AAChD,gCAAgC,+DAAQ;AACxC;AACA,qBAAqB;AACrB;AACA,qBAAqB,oBAAoB,6BAA6B,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,suBAAuB,mBAAmB;AAC1C;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;A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","file":"pages-home-home-module.js","sourcesContent":["import { __assign, __decorate } from 'tslib';\nimport { EventEmitter, Input, Output, ViewChild, ElementRef, HostListener, Component, Pipe, Injectable, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { Subject, from, Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\nvar AutoCompleteOptions = /** @class */ (function () {\n    function AutoCompleteOptions() {\n        this.animated = false;\n        this.color = null;\n        this.autocomplete = 'off';\n        this.autocorrect = 'off';\n        this.cancelButtonIcon = 'arrow-round-back';\n        this.cancelButtonText = 'Cancel';\n        this.clearIcon = 'close-circle';\n        this.clearInput = false;\n        this.clearOnEdit = false;\n        this.debounce = 250;\n        this.mode = 'md';\n        this.noItems = 'No items found.';\n        this.placeholder = 'Search';\n        this.searchIcon = 'search';\n        this.showCancelButton = false;\n        this.spellcheck = 'off';\n        this.type = 'search';\n        this.value = '';\n    }\n    return AutoCompleteOptions;\n}());\n\nvar AutoCompleteStyles = /** @class */ (function () {\n    function AutoCompleteStyles() {\n        this.list = {};\n        this.listItem = {};\n        this.searchbar = {};\n    }\n    return AutoCompleteStyles;\n}());\n\nvar AutoCompleteComponent = /** @class */ (function () {\n    /**\n     * Create a new instance\n     */\n    function AutoCompleteComponent() {\n        this.alwaysShowList = false;\n        this.autoFocusSuggestion = true;\n        this.enableBrowserAutoComplete = false;\n        this.clearInvalidInput = true;\n        this.disabled = false;\n        this.exclude = [];\n        this.frontIcon = false;\n        this.hideListOnSelection = true;\n        this.location = 'auto';\n        this.maxResults = 8;\n        this.maxSelected = null;\n        this.multi = false;\n        this.name = '';\n        this.removeButtonClasses = '';\n        this.removeButtonColor = 'primary';\n        this.removeButtonIcon = 'close-circle';\n        this.removeButtonSlot = 'end';\n        this.removeDuplicateSuggestions = true;\n        this.selectOnTabOut = true;\n        this.styles = new AutoCompleteStyles;\n        this.useIonInput = false;\n        this.autocompleteOptions = new AutoCompleteOptions();\n        this.onTouchedCallback = false;\n        this.onChangeCallback = false;\n        this.hasFocus = false;\n        this.isLoading = false;\n        this.focusedOption = -1;\n        this.showSuggestions = false;\n        this.showListChanged = false;\n        this.autoBlur = new EventEmitter();\n        this.autoFocus = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this.ionAutoInput = new EventEmitter();\n        this.itemsChange = new EventEmitter();\n        this.itemsCleared = new EventEmitter();\n        this.itemsHidden = new EventEmitter();\n        this.itemRemoved = new EventEmitter();\n        this.itemSelected = new EventEmitter();\n        this.itemsShown = new EventEmitter();\n        this.modelChange = new EventEmitter();\n        this.keyword = '';\n        this.suggestions = [];\n        this.autocompleteOptions = new AutoCompleteOptions();\n        this.defaultOpts = new AutoCompleteOptions();\n        this.selected = [];\n    }\n    AutoCompleteComponent_1 = AutoCompleteComponent;\n    Object.defineProperty(AutoCompleteComponent.prototype, \"model\", {\n        get: function () {\n            var model = this.selected;\n            if (!this.multi && typeof this.selected.length !== 'undefined') {\n                if (this.selected.length === 0) {\n                    model = null;\n                }\n                else {\n                    model = this.selected[0];\n                }\n            }\n            return model;\n        },\n        set: function (selected) {\n            if (typeof selected !== 'undefined' && selected !== null) {\n                this.selected = selected;\n                this.keyword = this.getLabel(selected);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AutoCompleteComponent.prototype, \"options\", {\n        set: function (options) {\n            this.autocompleteOptions = new AutoCompleteOptions();\n            var keys = Object.keys(this.autocompleteOptions);\n            var keysLength = keys.length;\n            for (var i = 0; i < keysLength; i++) {\n                var key = keys[i];\n                if (typeof options[key] !== 'undefined') {\n                    this.autocompleteOptions[key] = options[key];\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AutoCompleteComponent.prototype, \"eager\", {\n        set: function (eager) {\n            if (eager) {\n                this.getItems(null, false);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AutoCompleteComponent.prototype, \"showList\", {\n        get: function () {\n            return this.showSuggestions;\n        },\n        set: function (value) {\n            if (typeof value === 'undefined') {\n                return;\n            }\n            if (this.showSuggestions === value) {\n                return;\n            }\n            this.showSuggestions = value === true;\n            this.showListChanged = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     */\n    AutoCompleteComponent.prototype.ngAfterViewChecked = function () {\n        if (this.showListChanged) {\n            this.showListChanged = false;\n            this.showSuggestions ? this.itemsShown.emit() : this.itemsHidden.emit();\n        }\n    };\n    AutoCompleteComponent.prototype.ngDoCheck = function () {\n        if (!this.hasFocus) {\n            if (this.clearInvalidInput && (this.selected === null || this.multi)) {\n                if (this.keyword !== '') {\n                    this.keyword = '';\n                }\n                if (this.inputElem && this.inputElem.nativeElement) {\n                    if (this.inputElem.nativeElement.children && this.inputElem.nativeElement.children.length !== 0) {\n                        if (this.inputElem.nativeElement.children[0].children && this.inputElem.nativeElement.children[0].children.length !== 0) {\n                            if (this.inputElem.nativeElement.children[0].children[0].value) {\n                                this.inputElem.nativeElement.children[0].children[0].value = '';\n                            }\n                        }\n                    }\n                }\n                if (this.searchbarElem && this.searchbarElem.nativeElement) {\n                    if (this.searchbarElem.nativeElement.children && this.searchbarElem.nativeElement.children.length !== 0) {\n                        if (this.searchbarElem.nativeElement.children[0].children) {\n                            if (this.searchbarElem.nativeElement.children[0].children.length !== 0) {\n                                if (this.searchbarElem.nativeElement.children[0].children[0].value) {\n                                    this.searchbarElem.nativeElement.children[0].children[0].value = '';\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Handle document click\n     *\n     * @param event\n     *\n     * @private\n     */\n    AutoCompleteComponent.prototype.documentClickHandler = function (event) {\n        if ((this.searchbarElem && this.searchbarElem.nativeElement && !this.searchbarElem.nativeElement.contains(event.target))\n            ||\n                (!this.inputElem && this.inputElem.nativeElement && this.inputElem.nativeElement.contains(event.target))) {\n            this.hideItemList();\n        }\n    };\n    /**\n     * Get value from form\n     *\n     * @param selection\n     *\n     * @private\n     */\n    AutoCompleteComponent.prototype.getFormValue = function (selection) {\n        if (selection == null || typeof this.dataProvider === 'function') {\n            return null;\n        }\n        var attr = this.dataProvider.formValueAttribute == null ?\n            this.dataProvider.labelAttribute : this.dataProvider.formValueAttribute;\n        if (typeof selection === 'object' && attr) {\n            return selection[attr];\n        }\n        return selection;\n    };\n    /**\n     * Get element's position on screen\n     *\n     * @param el\n     *\n     * @private\n     */\n    AutoCompleteComponent.prototype._getPosition = function (el) {\n        var xPos = 0;\n        var yPos = 0;\n        while (el) {\n            if (el.tagName === 'BODY') {\n                var xScroll = el.scrollLeft || document.documentElement.scrollLeft;\n                var yScroll = el.scrollTop || document.documentElement.scrollTop;\n                xPos += (el.offsetLeft - xScroll + el.clientLeft);\n                yPos += (el.offsetTop - yScroll + el.clientTop);\n            }\n            else {\n                xPos += (el.offsetLeft - el.scrollLeft + el.clientLeft);\n                yPos += (el.offsetTop - el.scrollTop + el.clientTop);\n            }\n            el = el.offsetParent;\n        }\n        return {\n            x: xPos,\n            y: yPos\n        };\n    };\n    AutoCompleteComponent.prototype.clickClear = function () {\n        this.clearValue(true);\n        this.itemsCleared.emit(true);\n    };\n    /**\n     * Clear current input value\n     *\n     * @param hideItemList\n     */\n    AutoCompleteComponent.prototype.clearValue = function (hideItemList) {\n        if (hideItemList === void 0) { hideItemList = false; }\n        this.keyword = '';\n        this.selection = null;\n        this.formValue = null;\n        if (hideItemList) {\n            this.hideItemList();\n        }\n        this.focusedOption = -1;\n        return;\n    };\n    /**\n     * Get items for auto-complete\n     *\n     * @param event\n     * @param show\n     */\n    AutoCompleteComponent.prototype.getItems = function (event, show) {\n        var _this = this;\n        this.isLoading = true;\n        if (this.promise) {\n            clearTimeout(this.promise);\n        }\n        this.promise = setTimeout(function () {\n            if (event) {\n                _this.keyword = event.detail.target.value;\n            }\n            var result;\n            if (_this.showResultsFirst && _this.keyword.trim() === '') {\n                _this.keyword = '';\n            }\n            if (typeof _this.dataProvider === 'function') {\n                result = _this.dataProvider(_this.keyword);\n                _this.setSuggestions(result, show);\n                _this.isLoading = false;\n            }\n            else {\n                result = _this.dataProvider.getResults(_this.keyword);\n                if (result instanceof Subject) {\n                    result = result.asObservable();\n                }\n                else if (result instanceof Promise) {\n                    result = from(result);\n                }\n                if (result instanceof Observable) {\n                    result.pipe(finalize(function () {\n                        _this.isLoading = false;\n                    })).subscribe(function (results) {\n                        _this.setSuggestions(results, show);\n                    }, function (error) { return console.error(error); });\n                }\n                else {\n                    _this.setSuggestions(result, show);\n                    _this.isLoading = false;\n                }\n            }\n            _this.ionAutoInput.emit(_this.keyword);\n        }, this.autocompleteOptions.debounce);\n    };\n    /**\n     * Get an item's label\n     *\n     * @param selection\n     */\n    AutoCompleteComponent.prototype.getLabel = function (selection) {\n        if (selection == null || typeof this.dataProvider === 'function') {\n            return '';\n        }\n        var attr = this.dataProvider.formValueAttribute == null ?\n            this.dataProvider.labelAttribute : this.dataProvider.formValueAttribute;\n        var value = selection;\n        if (this.dataProvider.getItemLabel) {\n            value = this.dataProvider.getItemLabel(value);\n        }\n        if (!this.multi && typeof value !== 'undefined' && Object.prototype.toString.call(value) === '[object Array]') {\n            if (value.length === 0) {\n                return '';\n            }\n            else {\n                value = value[0];\n            }\n        }\n        if (typeof value === 'object' && attr) {\n            return value[attr] || '';\n        }\n        return value || '';\n    };\n    /**\n     * Get current selection\n     */\n    AutoCompleteComponent.prototype.getSelection = function () {\n        if (this.multi) {\n            return this.selection;\n        }\n        else {\n            return this.selected;\n        }\n    };\n    /**\n     * Get menu style\n     */\n    AutoCompleteComponent.prototype.listStyles = function () {\n        var listLocationStyles = this.listLocationStyles();\n        return __assign({}, listLocationStyles, this.styles.list);\n    };\n    AutoCompleteComponent.prototype.listLocationStyles = function () {\n        var location = this.location;\n        if (this.location === 'auto') {\n            var elementY = this._getPosition(this.searchbarElem.nativeElement).y;\n            var windowY = window.innerHeight;\n            if (elementY > windowY - elementY) {\n                location = 'top';\n            }\n            else {\n                location = 'bottom';\n            }\n        }\n        if (location === 'bottom') {\n            return {};\n        }\n        else {\n            return {\n                'bottom': '37px'\n            };\n        }\n    };\n    /**\n     * Get current input value\n     */\n    AutoCompleteComponent.prototype.getValue = function () {\n        return this.formValue;\n    };\n    /**\n     * Handles tab key press.\n     * If `selectOnTabOut` is `true`, will select currently focused item\n     *\n     * @param event\n     */\n    AutoCompleteComponent.prototype.handleTabOut = function (event) {\n        if (this.selectOnTabOut && this.suggestions.length !== 0) {\n            if (this.focusedOption !== -1) {\n                this.selectItem(this.suggestions[this.focusedOption]);\n            }\n            else {\n                this.hideItemList();\n            }\n        }\n        else {\n            this.hideItemList();\n        }\n        this.onBlur(event);\n    };\n    /**\n     * Handle tap\n     *\n     * @param event\n     */\n    AutoCompleteComponent.prototype.handleTap = function (event) {\n        if (this.showResultsFirst || this.keyword.length > 0) {\n            this.getItems();\n        }\n    };\n    /**\n     * Handle tap when selecting an item\n     *\n     * @param $event\n     * @param suggestion\n     */\n    AutoCompleteComponent.prototype.handleSelectTap = function ($event, suggestion) {\n        if (typeof suggestion !== 'undefined') {\n            this.selectItem(suggestion);\n            if ($event.srcEvent) {\n                if ($event.srcEvent.stopPropagation) {\n                    $event.srcEvent.stopPropagation();\n                }\n                if ($event.srcEvent.preventDefault) {\n                    $event.srcEvent.preventDefault();\n                }\n            }\n            else if ($event.preventDefault) {\n                $event.preventDefault();\n            }\n        }\n        return false;\n    };\n    /**\n     * Hide item list\n     */\n    AutoCompleteComponent.prototype.hideItemList = function () {\n        if (this.showSuggestions === false && this.alwaysShowList === false) {\n            this.showListChanged = true;\n        }\n        this.showSuggestions = this.alwaysShowList;\n        this.focusedOption = -1;\n    };\n    AutoCompleteComponent.prototype.highlightItem = function (direction) {\n        if (this.showSuggestions === false) {\n            this.showItemList();\n        }\n        var max = this.suggestions.length - 1;\n        if (direction < 0) {\n            if (this.focusedOption === -1 || this.focusedOption === max) {\n                this.focusedOption = 0;\n            }\n            else {\n                this.focusedOption++;\n            }\n        }\n        else if (direction > 0) {\n            if (this.focusedOption === -1 || this.focusedOption === 0) {\n                this.focusedOption = max;\n            }\n            else {\n                this.focusedOption--;\n            }\n        }\n    };\n    /**\n     * Fired when the input focused\n     */\n    AutoCompleteComponent.prototype.onFocus = function (event) {\n        this.hasFocus = true;\n        this.getItems();\n        event = this._reflectName(event);\n        this.autoFocus.emit(event);\n        this.focus.emit(event);\n    };\n    /**\n     * Fired when the input focused\n     */\n    AutoCompleteComponent.prototype.onBlur = function (event) {\n        this.hasFocus = false;\n        event = this._reflectName(event);\n        this.autoBlur.emit(event);\n        this.blur.emit(event);\n    };\n    AutoCompleteComponent.prototype._reflectName = function (event) {\n        if (typeof event.srcElement.attributes['ng-reflect-name'] === 'object') {\n            event.srcElement.name = event.srcElement.attributes['ng-reflect-name'].value;\n        }\n        return event;\n    };\n    /**\n     * Register onChangeCallback\n     *\n     * @param fn\n     */\n    AutoCompleteComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    /**\n     * Register onTouchedCallback\n     *\n     * @param fn\n     */\n    AutoCompleteComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    /**\n     * Remove already selected suggestions\n     *\n     * @param suggestions\n     */\n    AutoCompleteComponent.prototype.removeDuplicates = function (suggestions) {\n        var selectedCount = this.selected ? this.selected.length : 0;\n        var suggestionCount = suggestions.length;\n        for (var i = 0; i < selectedCount; i++) {\n            var selectedLabel = this.getLabel(this.selected[i]);\n            for (var j = 0; j < suggestionCount; j++) {\n                var suggestedLabel = this.getLabel(suggestions[j]);\n                if (selectedLabel === suggestedLabel) {\n                    suggestions.splice(j, 1);\n                }\n            }\n        }\n        return suggestions;\n    };\n    AutoCompleteComponent.prototype.removeExcluded = function (suggestions) {\n        var excludedCount = this.exclude.length;\n        for (var i = 0; i < excludedCount; i++) {\n            var excludeLabel = this.exclude[i];\n            if (typeof excludeLabel === 'object') {\n                excludeLabel = this.getLabel(excludeLabel);\n            }\n            var suggestionCount = suggestions.length;\n            for (var j = 0; j < suggestionCount; j++) {\n                var suggestedLabel = this.getLabel(suggestions[j]);\n                if (excludeLabel === suggestedLabel) {\n                    suggestions.splice(j, 1);\n                    break;\n                }\n            }\n        }\n        return suggestions;\n    };\n    /**\n     * Remove item from selected\n     *\n     * @param selection\n     * @param notify?\n     */\n    AutoCompleteComponent.prototype.removeItem = function (selection, notify) {\n        var count = this.selected ? this.selected.length : 0;\n        for (var i = 0; i < count; i++) {\n            var item = this.selected[i];\n            var selectedLabel = this.getLabel(selection);\n            var itemLabel = this.getLabel(item);\n            if (selectedLabel === itemLabel) {\n                this.selected.splice(i, 1);\n            }\n        }\n        notify = typeof notify === 'undefined' ? true : notify;\n        if (notify) {\n            this.itemRemoved.emit(selection);\n            this.itemsChange.emit(this.selected);\n        }\n        this.modelChange.emit(this.selected);\n    };\n    /**\n     * Select item from list\n     *\n     * @param selection\n     **/\n    AutoCompleteComponent.prototype.selectItem = function (selection) {\n        this.keyword = this.getLabel(selection);\n        this.formValue = this.getFormValue(selection);\n        this.hideItemList();\n        this.updateModel(this.formValue);\n        if (this.hideListOnSelection) {\n            this.hideItemList();\n        }\n        if (this.multi) {\n            if (this.maxSelected === null || this.selected.length <= this.maxSelected) {\n                this.clearValue();\n                this.selected.push(selection);\n                this.itemsChange.emit(this.selected);\n            }\n            else {\n                return;\n            }\n        }\n        else {\n            this.selection = selection;\n            this.selected = [selection];\n            this.itemsChange.emit(selection);\n        }\n        this.itemSelected.emit(selection);\n        this.modelChange.emit(this.selected);\n    };\n    /**\n     * Set focus of searchbar\n     */\n    AutoCompleteComponent.prototype.setFocus = function () {\n        if (this.useIonInput && this.inputElem) {\n            this.inputElem.nativeElement.setFocus();\n        }\n        else if (this.searchbarElem) {\n            this.searchbarElem.nativeElement.setFocus();\n        }\n    };\n    /**\n     * Set suggestions\n     *\n     * @param suggestions\n     * @param show\n     */\n    AutoCompleteComponent.prototype.setSuggestions = function (suggestions, show) {\n        if (this.removeDuplicateSuggestions) {\n            suggestions = this.removeDuplicates(suggestions);\n            suggestions = this.removeExcluded(suggestions);\n        }\n        this.suggestions = suggestions;\n        if (show || typeof show === 'undefined') {\n            this.showItemList();\n        }\n        if (this.autoFocusSuggestion) {\n            if (this.suggestions.length !== 0) {\n                this.focusedOption = 0;\n            }\n        }\n    };\n    /**\n     * Set current input value\n     *\n     * @param selection\n     */\n    AutoCompleteComponent.prototype.setValue = function (selection) {\n        this.formValue = this.getFormValue(selection);\n        this.keyword = this.getLabel(selection);\n        return;\n    };\n    /**\n     * Show item list\n     */\n    AutoCompleteComponent.prototype.showItemList = function () {\n        if (this.showSuggestions === false) {\n            this.showListChanged = true;\n        }\n        this.showSuggestions = true;\n    };\n    /**\n     * Update the model\n     */\n    AutoCompleteComponent.prototype.updateModel = function (enteredText) {\n        if (enteredText !== this.formValue) {\n            this.formValue = enteredText;\n            if (!this.multi) {\n                this.selected = null;\n            }\n        }\n        if (this.onChangeCallback) {\n            this.onChangeCallback(this.formValue);\n        }\n        this.modelChange.emit(this.selected);\n    };\n    /**\n     * Write value\n     *\n     * @param value\n     */\n    AutoCompleteComponent.prototype.writeValue = function (value) {\n        if (value !== this.selection) {\n            this.selection = value || null;\n            this.formValue = this.getFormValue(this.selection);\n            this.keyword = this.getLabel(this.selection);\n        }\n    };\n    var AutoCompleteComponent_1;\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"alwaysShowList\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"autoFocusSuggestion\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"enableBrowserAutoComplete\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"clearInvalidInput\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"dataProvider\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"disabled\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"emptyTemplate\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"exclude\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"frontIcon\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"hideListOnSelection\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"keyword\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"location\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"maxResults\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"maxSelected\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"multi\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"name\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"removeButtonClasses\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"removeButtonColor\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"removeButtonIcon\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"removeButtonSlot\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"removeDuplicateSuggestions\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"selectionTemplate\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"selectOnTabOut\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"showResultsFirst\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"styles\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"template\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"useIonInput\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"model\", null);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"options\", null);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"modelChange\", void 0);\n    __decorate([\n        Input()\n    ], AutoCompleteComponent.prototype, \"eager\", null);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"blur\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"autoFocus\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"autoBlur\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"focus\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"ionAutoInput\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"itemsChange\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"itemsCleared\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"itemsHidden\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"itemRemoved\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"itemSelected\", void 0);\n    __decorate([\n        Output()\n    ], AutoCompleteComponent.prototype, \"itemsShown\", void 0);\n    __decorate([\n        ViewChild('searchbarElem', {\n            read: ElementRef,\n            static: false\n        })\n    ], AutoCompleteComponent.prototype, \"searchbarElem\", void 0);\n    __decorate([\n        ViewChild('inputElem', {\n            read: ElementRef,\n            static: false\n        })\n    ], AutoCompleteComponent.prototype, \"inputElem\", void 0);\n    __decorate([\n        HostListener('document:click', ['$event'])\n    ], AutoCompleteComponent.prototype, \"documentClickHandler\", null);\n    AutoCompleteComponent = AutoCompleteComponent_1 = __decorate([\n        Component({\n            providers: [\n                {\n                    provide: NG_VALUE_ACCESSOR,\n                    useExisting: AutoCompleteComponent_1,\n                    multi: true\n                }\n            ],\n            selector: 'ion-auto-complete',\n            template: \"<ng-template #defaultSelection\\n             let-attrs=\\\"attrs\\\">\\n    <ion-chip class=\\\"{{ attrs.removeButtonClasses }}\\\"\\n              [color]=\\\"attrs.removeButtonColor\\\"\\n              [outline]=\\\"true\\\">\\n        <ion-icon *ngIf=\\\"frontIcon\\\"\\n                  [name]=\\\"frontIcon\\\"\\n                  [slot]=\\\"'start'\\\"\\n                  color=\\\"primary\\\"></ion-icon>\\n\\n        <ion-label>{{ attrs.label }}</ion-label>\\n\\n        <ion-icon *ngIf=\\\"attrs.removeButtonIcon\\\"\\n                  [name]=\\\"attrs.removeButtonIcon\\\"\\n                  [slot]=\\\"attrs.removeButtonSlot\\\"></ion-icon>\\n    </ion-chip>\\n</ng-template>\\n\\n<div *ngIf=\\\"multi\\\">\\n    <div *ngFor=\\\"let item of selected\\\"\\n         class=\\\"selected-items\\\"\\n         (click)=\\\"removeItem(item)\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"selectionTemplate || defaultSelection\\\"\\n                     [ngTemplateOutletContext]=\\\"{\\n                            attrs: {\\n                              data:                item,\\n                              label:               getLabel(item),\\n                              removeButtonClasses: removeButtonClasses,\\n                              removeButtonColor:   removeButtonColor,\\n                              removeButtonIcon:    removeButtonIcon,\\n                              removeButtonSlot:    removeButtonSlot\\n                            }\\n                         }\\\"></ng-template>\\n    </div>\\n</div>\\n\\n<ion-input #inputElem\\n           [autocomplete]=\\\"enableBrowserAutoComplete ? 'on' : 'off'\\\"\\n           [name]=\\\"name\\\"\\n           (ionInput)=\\\"getItems($event)\\\"\\n           (tap)=\\\"handleTap($event)\\\"\\n           [(ngModel)]=\\\"keyword\\\"\\n           (ngModelChange)=\\\"updateModel($event)\\\"\\n           [placeholder]=\\\"autocompleteOptions.placeholder == null ? defaultOpts.placeholder : autocompleteOptions.placeholder\\\"\\n           [type]=\\\"autocompleteOptions.type == null ? defaultOpts.type : autocompleteOptions.type\\\"\\n           [clearOnEdit]=\\\"autocompleteOptions.clearOnEdit == null ? defaultOpts.clearOnEdit : autocompleteOptions.clearOnEdit\\\"\\n           [clearInput]=\\\"autocompleteOptions.clearInput == null ? defaultOpts.clearInput : autocompleteOptions.clearInput\\\"\\n           [color]=\\\"autocompleteOptions.color == null ? null : autocompleteOptions.color\\\"\\n           [mode]=\\\"autocompleteOptions.mode == null ? defaultOpts.mode : autocompleteOptions.mode\\\"\\n           [disabled]=\\\"disabled || (this.maxSelected !== null && this.selected.length >= this.maxSelected)\\\"\\n           [ngClass]=\\\"{ 'hidden': !useIonInput, 'loading': isLoading }\\\"\\n           [ngStyle]=\\\"styles.searchbar\\\"\\n           (keydown.tab)=\\\"handleTabOut($event)\\\"\\n           (keydown.shift.tab)=\\\"hideItemList()\\\"\\n           (keyup.arrowDown)=\\\"highlightItem(-1)\\\"\\n           (keyup.arrowUp)=\\\"highlightItem(1)\\\"\\n           (keyup.enter)=\\\"handleSelectTap($event, suggestions[focusedOption])\\\"\\n           (keyup.escape)=\\\"hideItemList()\\\"\\n           (ionFocus)=\\\"onFocus($event)\\\"\\n           (ionBlur)=\\\"onBlur($event)\\\"></ion-input>\\n\\n<ion-searchbar #searchbarElem\\n               [autocomplete]=\\\"enableBrowserAutoComplete ? 'on' : 'off'\\\"\\n               [name]=\\\"name\\\"\\n               [animated]=\\\"autocompleteOptions.animated == null ? defaultOpts.animated : autocompleteOptions.animated\\\"\\n               (ionInput)=\\\"getItems($event)\\\"\\n               (tap)=\\\"handleTap($event)\\\"\\n               [(ngModel)]=\\\"keyword\\\"\\n               (ngModelChange)=\\\"updateModel($event)\\\"\\n               [cancelButtonIcon]=\\\"autocompleteOptions.cancelButtonIcon == null ? defaultOpts.cancelButtonIcon : autocompleteOptions.cancelButtonIcon\\\"\\n               [cancelButtonText]=\\\"autocompleteOptions.cancelButtonText == null ? defaultOpts.cancelButtonText : autocompleteOptions.cancelButtonText\\\"\\n               [clearIcon]=\\\"autocompleteOptions.clearIcon == null ? defaultOpts.clearIcon : autocompleteOptions.clearIcon\\\"\\n               [color]=\\\"autocompleteOptions.color == null ? null : autocompleteOptions.color\\\"\\n               [showCancelButton]=\\\"autocompleteOptions.showCancelButton == null ?\\n                                        (defaultOpts.showCancelButton ? 'always' : 'never') :\\n                                        (autocompleteOptions.showCancelButton ? 'always' : 'never')\\\"\\n               [debounce]=\\\"autocompleteOptions.debounce == null ? defaultOpts.debounce : autocompleteOptions.debounce\\\"\\n               [placeholder]=\\\"autocompleteOptions.placeholder == null ? defaultOpts.placeholder : autocompleteOptions.placeholder\\\"\\n               [autocorrect]=\\\"autocompleteOptions.autocorrect == null ? defaultOpts.autocorrect : autocompleteOptions.autocorrect\\\"\\n               [mode]=\\\"autocompleteOptions.mode == null ? defaultOpts.mode : autocompleteOptions.mode\\\"\\n               [searchIcon]=\\\"autocompleteOptions.searchIcon == null ? defaultOpts.searchIcon : autocompleteOptions.searchIcon\\\"\\n               [spellcheck]=\\\"autocompleteOptions.spellcheck == null ? defaultOpts.spellcheck : autocompleteOptions.spellcheck\\\"\\n               [type]=\\\"autocompleteOptions.type == null ? defaultOpts.type : autocompleteOptions.type\\\"\\n               [ngClass]=\\\"{ 'hidden': useIonInput, 'loading': isLoading, 'disabled': disabled || (this.maxSelected !== null && this.selected.length >= this.maxSelected) }\\\"\\n               [ngStyle]=\\\"styles.searchbar\\\"\\n               (keydown.tab)=\\\"handleTabOut($event)\\\"\\n               (keydown.shift.tab)=\\\"hideItemList()\\\"\\n               (keyup.arrowDown)=\\\"highlightItem(-1)\\\"\\n               (keyup.arrowUp)=\\\"highlightItem(1)\\\"\\n               (keyup.enter)=\\\"handleSelectTap($event, suggestions[focusedOption])\\\"\\n               (keyup.escape)=\\\"hideItemList()\\\"\\n               (ionClear)=\\\"clickClear()\\\"\\n               (ionFocus)=\\\"onFocus($event)\\\"\\n               (ionBlur)=\\\"onBlur($event)\\\"></ion-searchbar>\\n\\n<ng-template #defaultTemplate\\n             let-attrs=\\\"attrs\\\">\\n    <span [innerHTML]='attrs.label | boldprefix:attrs.keyword'></span>\\n</ng-template>\\n\\n<ng-template #defaultEmptyTemplate\\n             let-attrs=\\\"attrs\\\"\\n             class=\\\"ion-text-center\\\">\\n    {{ autocompleteOptions.noItems }}\\n</ng-template>\\n\\n<ul *ngIf=\\\"!(disabled || (this.maxSelected !== null && this.selected.length >= this.maxSelected)) && suggestions.length > 0 && showSuggestions\\\"\\n    [ngStyle]=\\\"listStyles()\\\">\\n    <li *ngFor=\\\"let suggestion of suggestions| slice:0:maxResults; let index = index\\\"\\n        [ngClass]=\\\"{ 'focus': focusedOption === index }\\\"\\n        [ngStyle]=\\\"styles.listItem\\\"\\n        (mouseenter)=\\\"focusedOption = index\\\"\\n        (click)=\\\"handleSelectTap($event, suggestion)\\\"\\n        (tap)=\\\"handleSelectTap($event, suggestion)\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"template || defaultTemplate\\\"\\n                     [ngTemplateOutletContext]=\\\"{\\n                        attrs:{\\n                          data:               suggestion,\\n                          label:              getLabel(suggestion),\\n                          keyword:            keyword,\\n                          formValue:          getFormValue(suggestion),\\n                          labelAttribute:     getLabel(suggestion),\\n                          formValueAttribute: getFormValue(suggestion)\\n                        }\\n                     }\\\"></ng-template>\\n    </li>\\n</ul>\\n\\n<ul *ngIf=\\\"suggestions.length === 0 && showSuggestions\\\"\\n    [ngStyle]=\\\"listStyles()\\\">\\n    <li [ngStyle]=\\\"styles.listItem\\\">\\n        <ng-template [ngTemplateOutlet]=\\\"emptyTemplate || defaultEmptyTemplate\\\"\\n                     [ngTemplateOutletContext]=\\\"{\\n                        attrs:{\\n                          keyword: keyword\\n                        }\\n                     }\\\"></ng-template>\\n    </li>\\n</ul>\\n\",\n            styles: [\"ion-auto-complete{overflow:hidden!important;width:90vw;display:inline-block}ion-auto-complete ion-searchbar{padding:1px!important}ion-auto-complete .disabled input.searchbar-input{pointer-events:none;cursor:default}ion-auto-complete ul{position:absolute;width:90vw;margin-top:0;background:#fff;list-style-type:none;padding:0;left:16px;z-index:999;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12)}ion-auto-complete ul li{padding:15px;border-bottom:1px solid #c1c1c1}ion-auto-complete ul ion-auto-complete-item{height:40px;width:100%}ion-auto-complete ul li:last-child{border:none}ion-auto-complete ul li.focus,ion-auto-complete ul li:focus{cursor:pointer;background:#f1f1f1}ion-auto-complete .hidden{display:none}ion-auto-complete .loading input.searchbar-input{background:url(/assets/loading.gif) right 4px center/25px 25px no-repeat #fff}ion-auto-complete .searchbar-clear-button.sc-ion-searchbar-md{right:34px}ion-auto-complete .selected-items{float:left}\"]\n        })\n    ], AutoCompleteComponent);\n    return AutoCompleteComponent;\n}());\n\n/**\n * Bolds the beginning of the matching string in the item\n */\nvar BoldPrefix = /** @class */ (function () {\n    function BoldPrefix() {\n    }\n    BoldPrefix.prototype.transform = function (value, keyword) {\n        if (!keyword) {\n            return value;\n        }\n        var escaped_keyword = keyword.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        return value.replace(new RegExp(escaped_keyword, 'gi'), function (str) {\n            return str.bold();\n        });\n    };\n    BoldPrefix = __decorate([\n        Pipe({\n            name: 'boldprefix'\n        }),\n        Injectable()\n    ], BoldPrefix);\n    return BoldPrefix;\n}());\n\nvar AutoCompleteModule = /** @class */ (function () {\n    function AutoCompleteModule() {\n    }\n    AutoCompleteModule_1 = AutoCompleteModule;\n    AutoCompleteModule.forRoot = function () {\n        return {\n            ngModule: AutoCompleteModule_1,\n            providers: []\n        };\n    };\n    var AutoCompleteModule_1;\n    AutoCompleteModule = AutoCompleteModule_1 = __decorate([\n        NgModule({\n            declarations: [\n                AutoCompleteComponent,\n                BoldPrefix\n            ],\n            exports: [\n                AutoCompleteComponent,\n                BoldPrefix\n            ],\n            imports: [\n                CommonModule,\n                FormsModule,\n                IonicModule\n            ]\n        })\n    ], AutoCompleteModule);\n    return AutoCompleteModule;\n}());\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutoCompleteComponent, AutoCompleteModule, AutoCompleteOptions, BoldPrefix };\n//# sourceMappingURL=ionic4-auto-complete.js.map\n","export default \"<ng-template #empty\\n             let-attrs=\\\"attrs\\\">\\n    <div class=\\\"country-suggestions-empty\\\">\\n        <ion-text>That country does not exist!</ion-text>\\n\\n        <div class=\\\"country-suggestions-empty-icon\\\"></div>\\n    </div>\\n</ng-template>\\n\\n<ng-template #selection\\n             let-attrs=\\\"attrs\\\">\\n        <ion-img class=\\\"flag ion-float-left ion-margin-horizontal\\\"\\n                 style=\\\"height: 50px;\\\"\\n                 [slot]=\\\"'start'\\\"\\n                 [src]=\\\"attrs.data.flag\\\"></ion-img>\\n</ng-template>\\n\\n<ng-template #suggestions\\n             let-attrs=\\\"attrs\\\">\\n    <ion-item>\\n        <ion-img class=\\\"flag\\\"\\n                 [slot]=\\\"'start'\\\"\\n                 [src]=\\\"attrs.data.flag\\\"></ion-img>\\n\\n        <ion-text>\\n            <span [innerHtml]=\\\"attrs.data.name | boldprefix:attrs.keyword\\\"></span> ({{ attrs.data.nativeName }})\\n        </ion-text>\\n    </ion-item>\\n</ng-template>\\n\\n<ion-auto-complete [(model)]=\\\"selected\\\"\\n                   [eager]=\\\"true\\\"\\n                   [multi]=\\\"true\\\"\\n                   [dataProvider]=\\\"provider\\\"\\n                   [disabled]=\\\"false\\\"\\n                   [maxSelected]=\\\"3\\\"\\n                   [template]=\\\"suggestions\\\"\\n                   [emptyTemplate]=\\\"empty\\\"\\n                   [selectionTemplate]=\\\"selection\\\"\\n                   (blur)=\\\"on('blur', $event)\\\"\\n                   (autoFocus)=\\\"on('autoFocus', $event)\\\"\\n                   (autoBlur)=\\\"on('autoBlur', $event)\\\"\\n                   (focus)=\\\"on('focus', $event)\\\"\\n                   (ionAutoInput)=\\\"on('ionAutoInput', $event)\\\"\\n                   (itemsChange)=\\\"on('itemsChange', $event)\\\"\\n                   (itemsCleared)=\\\"on('itemsCleared', $event)\\\"\\n                   (itemsHidden)=\\\"on('itemsHidden', $event)\\\"\\n                   (itemRemoved)=\\\"on('itemRemoved', $event)\\\"\\n                   (itemSelected)=\\\"on('itemSelected', $event)\\\"\\n                   (itemsShown)=\\\"on('itemsShown', $event)\\\"></ion-auto-complete>\\n\"","export default \"<ion-row>\\n    <ion-col [size]=\\\"12\\\">\\n        <ion-card style=\\\"overflow: inherit; padding: 15px;\\\">\\n            <ion-card-title class=\\\"ion-text-center\\\">\\n                Include\\n            </ion-card-title>\\n\\n            <ion-item style=\\\"overflow: inherit;\\\">\\n                <ion-auto-complete [(model)]=\\\"selected\\\"\\n                                   [multi]=\\\"true\\\"\\n                                   [dataProvider]=\\\"provider\\\"\\n                                   [disabled]=\\\"false\\\"\\n                                   [exclude]=\\\"excluded\\\"\\n                                   [options]=\\\"selectedOptions\\\"\\n                                   [removeButtonIcon]=\\\"'assets/icons/clear.svg'\\\"\\n                                   [removeButtonColor]=\\\"'dark'\\\"\\n                                   [useIonInput]=\\\"false\\\"\\n                                   (blur)=\\\"on('blur', $event)\\\"\\n                                   (autoFocus)=\\\"on('autoFocus', $event)\\\"\\n                                   (autoBlur)=\\\"on('autoBlur', $event)\\\"\\n                                   (focus)=\\\"on('focus', $event)\\\"\\n                                   (ionAutoInput)=\\\"on('ionAutoInput', $event)\\\"\\n                                   (itemsChange)=\\\"on('itemsChange', $event)\\\"\\n                                   (itemsCleared)=\\\"on('itemsCleared', $event)\\\"\\n                                   (itemsHidden)=\\\"on('itemsHidden', $event)\\\"\\n                                   (itemRemoved)=\\\"on('itemRemoved', $event)\\\"\\n                                   (itemSelected)=\\\"on('itemSelected', $event)\\\"\\n                                   (itemsShown)=\\\"on('itemsShown', $event)\\\"></ion-auto-complete>\\n            </ion-item>\\n        </ion-card>\\n    </ion-col>\\n</ion-row>\\n\\n<ion-row>\\n    <ion-col [size]=\\\"12\\\">\\n        <ion-card style=\\\"overflow: inherit; padding: 15px;\\\">\\n            <ion-card-title class=\\\"ion-text-center\\\">\\n                Exclude\\n            </ion-card-title>\\n\\n            <ion-item style=\\\"overflow: inherit;\\\">\\n                <ion-auto-complete [(model)]=\\\"excluded\\\"\\n                                   [multi]=\\\"true\\\"\\n                                   [dataProvider]=\\\"provider\\\"\\n                                   [disabled]=\\\"false\\\"\\n                                   [exclude]=\\\"selected\\\"\\n                                   [options]=\\\"excludedOptions\\\"\\n                                   [removeButtonIcon]=\\\"'assets/icons/clear.svg'\\\"\\n                                   [removeButtonColor]=\\\"'dark'\\\"\\n                                   [useIonInput]=\\\"true\\\"\\n                                   (blur)=\\\"on('blur', $event)\\\"\\n                                   (autoFocus)=\\\"on('autoFocus', $event)\\\"\\n                                   (autoBlur)=\\\"on('autoBlur', $event)\\\"\\n                                   (focus)=\\\"on('focus', $event)\\\"\\n                                   (ionAutoInput)=\\\"on('ionAutoInput', $event)\\\"\\n                                   (itemsChange)=\\\"on('itemsChange', $event)\\\"\\n                                   (itemsCleared)=\\\"on('itemsCleared', $event)\\\"\\n                                   (itemsHidden)=\\\"on('itemsHidden', $event)\\\"\\n                                   (itemRemoved)=\\\"on('itemRemoved', $event)\\\"\\n                                   (itemSelected)=\\\"on('itemSelected', $event)\\\"\\n                                   (itemsShown)=\\\"on('itemsShown', $event)\\\"></ion-auto-complete>\\n            </ion-item>\\n        </ion-card>\\n    </ion-col>\\n</ion-row>\\n\"","export default \"<ion-auto-complete [(model)]=\\\"selected\\\"\\n                   [multi]=\\\"false\\\"\\n                   [dataProvider]=\\\"provider\\\"\\n                   [disabled]=\\\"false\\\"\\n                   [options]=\\\"options\\\"\\n                   [removeButtonIcon]=\\\"'assets/icons/clear.svg'\\\"\\n                   [removeButtonColor]=\\\"'dark'\\\"\\n                   (blur)=\\\"on('blur', $event)\\\"\\n                   (autoFocus)=\\\"on('autoFocus', $event)\\\"\\n                   (autoBlur)=\\\"on('autoBlur', $event)\\\"\\n                   (focus)=\\\"on('focus', $event)\\\"\\n                   (ionAutoInput)=\\\"on('ionAutoInput', $event)\\\"\\n                   (itemsChange)=\\\"on('itemsChange', $event)\\\"\\n                   (itemsCleared)=\\\"on('itemsCleared', $event)\\\"\\n                   (itemsHidden)=\\\"on('itemsHidden', $event)\\\"\\n                   (itemRemoved)=\\\"on('itemRemoved', $event)\\\"\\n                   (itemSelected)=\\\"on('itemSelected', $event)\\\"\\n                   (itemsShown)=\\\"on('itemsShown', $event)\\\"></ion-auto-complete>\\n\"","export default \"<ion-auto-complete [(model)]=\\\"selected\\\"\\n                   [multi]=\\\"false\\\"\\n                   [dataProvider]=\\\"provider\\\"\\n                   [disabled]=\\\"false\\\"\\n                   [maxResults]=\\\"6\\\"\\n                   [removeButtonColor]=\\\"'dark'\\\"\\n                   (ionAutoInput)=\\\"on('ionAutoInput', $event)\\\"\\n                   (itemsChange)=\\\"on('itemsChange', $event)\\\"\\n                   (itemsCleared)=\\\"on('itemsCleared', $event)\\\"\\n                   (itemsHidden)=\\\"on('itemsHidden', $event)\\\"\\n                   (itemRemoved)=\\\"on('itemRemoved', $event)\\\"\\n                   (itemSelected)=\\\"on('itemSelected', $event)\\\"\\n                   (itemsShown)=\\\"on('itemsShown', $event)\\\"></ion-auto-complete>\\n\\n<ion-button [size]=\\\"'full'\\\"\\n            (click)=\\\"random()\\\">\\n    Random\\n</ion-button>\\n\"","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Demo: ionic4-auto-complete\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list style=\\\"height: 100%;\\\">\\n    <ion-segment (ionChange)=\\\"onClickSegment($event)\\\">\\n      <ion-segment-button *ngFor=\\\"let segment of segments\\\"\\n                          [value]=\\\"segment.key\\\"\\n                          [checked]=\\\"segment.key === selectedSegment\\\">\\n        <ion-label>\\n          {{ segment.label }}\\n        </ion-label>\\n      </ion-segment-button>\\n    </ion-segment>\\n\\n    <ion-item-divider></ion-item-divider>\\n\\n    <ion-card *ngIf=\\\"selectedSegment === 'simple-function'\\\"\\n              style=\\\"height: 100%;\\\">\\n      <ion-card-content>\\n        <ion-row>\\n          <ion-col class=\\\"label\\\">\\n            Select Anybody\\n          </ion-col>\\n          <ion-col [size]=\\\"12\\\">\\n            <simple-function></simple-function>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"selectedSegment === 'simple-service'\\\"\\n              style=\\\"height: 100%;\\\">\\n      <ion-card-content>\\n        <ion-row>\\n          <ion-col class=\\\"label\\\">\\n            Select Any Country\\n          </ion-col>\\n          <ion-col [size]=\\\"12\\\">\\n            <simple-service></simple-service>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"selectedSegment === 'multi-function'\\\"\\n              style=\\\"height: 100%;\\\">\\n      <ion-card-content>\\n        <ion-row>\\n          <ion-col class=\\\"label\\\">\\n            Select Multiple People\\n          </ion-col>\\n          <ion-col [size]=\\\"12\\\">\\n            <multi-function></multi-function>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"selectedSegment === 'custom-template'\\\"\\n              style=\\\"height: 100%;\\\">\\n      <ion-card-content>\\n        <ion-row>\\n          <ion-col class=\\\"label\\\">\\n            Select up to 3 Countries\\n          </ion-col>\\n          <ion-col [size]=\\\"12\\\">\\n            <custom-template></custom-template>\\n          </ion-col>\\n        </ion-row>\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-list>\\n</ion-content>\\n\"","export default \".country-suggestions-empty {\\n  background: lightgray;\\n}\\n.country-suggestions-empty ion-text {\\n  color: white;\\n  display: block;\\n  font-size: large;\\n  margin: 0 auto;\\n  width: 225px;\\n}\\n.country-suggestions-empty div.country-suggestions-empty-icon {\\n  background: lightgray url(/assets/icons/not-found.svg) no-repeat center;\\n  min-height: 130px;\\n}\\n.flag {\\n  width: 50px;\\n  height: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9qcnF1aWNrL2RldmVsb3BtZW50L2VuY291bnRpbmcvaW9uaWM0LWF1dG8tY29tcGxldGUvZGVtby9zcmMvYXBwL2NvbXBvbmVudHMvY3VzdG9tLXRlbXBsYXRlL2N1c3RvbS10ZW1wbGF0ZS5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvY29tcG9uZW50cy9jdXN0b20tdGVtcGxhdGUvY3VzdG9tLXRlbXBsYXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQUE7QUNDRjtBRENFO0VBQ0UsWUFBQTtFQUNBLGNBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7RUFDQSxZQUFBO0FDQ0o7QURFRTtFQUNFLHVFQUFBO0VBQ0EsaUJBQUE7QUNBSjtBRElBO0VBQ0UsV0FBQTtFQUNBLFlBQUE7QUNERiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3VzdG9tLXRlbXBsYXRlL2N1c3RvbS10ZW1wbGF0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb3VudHJ5LXN1Z2dlc3Rpb25zLWVtcHR5IHtcbiAgYmFja2dyb3VuZDogbGlnaHRncmF5O1xuXG4gIGlvbi10ZXh0IHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZm9udC1zaXplOiBsYXJnZTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICB3aWR0aDogMjI1cHg7XG4gIH1cblxuICBkaXYuY291bnRyeS1zdWdnZXN0aW9ucy1lbXB0eS1pY29uIHtcbiAgICBiYWNrZ3JvdW5kOiBsaWdodGdyYXkgdXJsKC9hc3NldHMvaWNvbnMvbm90LWZvdW5kLnN2Zykgbm8tcmVwZWF0IGNlbnRlcjtcbiAgICBtaW4taGVpZ2h0OiAxMzBweDtcbiAgfVxufVxuXG4uZmxhZyB7XG4gIHdpZHRoOiA1MHB4O1xuICBoZWlnaHQ6IDUwcHg7XG59XG4iLCIuY291bnRyeS1zdWdnZXN0aW9ucy1lbXB0eSB7XG4gIGJhY2tncm91bmQ6IGxpZ2h0Z3JheTtcbn1cbi5jb3VudHJ5LXN1Z2dlc3Rpb25zLWVtcHR5IGlvbi10ZXh0IHtcbiAgY29sb3I6IHdoaXRlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiBsYXJnZTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHdpZHRoOiAyMjVweDtcbn1cbi5jb3VudHJ5LXN1Z2dlc3Rpb25zLWVtcHR5IGRpdi5jb3VudHJ5LXN1Z2dlc3Rpb25zLWVtcHR5LWljb24ge1xuICBiYWNrZ3JvdW5kOiBsaWdodGdyYXkgdXJsKC9hc3NldHMvaWNvbnMvbm90LWZvdW5kLnN2Zykgbm8tcmVwZWF0IGNlbnRlcjtcbiAgbWluLWhlaWdodDogMTMwcHg7XG59XG5cbi5mbGFnIHtcbiAgd2lkdGg6IDUwcHg7XG4gIGhlaWdodDogNTBweDtcbn0iXX0= */\"","import {Component} from '@angular/core';\n\nimport {AutoCompleteOptions} from 'ionic4-auto-complete';\n\nimport {SimpleService} from '../../services/simple-service.service';\n\n@Component({\n  selector:    'custom-template',\n  templateUrl: 'custom-template.component.html',\n  styleUrls: [\n    'custom-template.component.scss'\n  ]\n})\nexport class CustomTemplateComponent {\n  public options:AutoCompleteOptions;\n\n  public selected:string[] = [];\n\n  constructor(\n      public provider:SimpleService\n  ) {\n    this.options = new AutoCompleteOptions();\n\n    this.options.autocomplete = 'on';\n    this.options.debounce = 750;\n    this.options.placeholder = 'Type text to search..';\n    this.options.type = 'add-friend.svg';\n  }\n\n  on(output, event):void {\n    console.log(output);\n    // console.log(event);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\n\nimport {AutoCompleteModule} from 'ionic4-auto-complete';\n\nimport {CustomTemplateComponent} from './custom-template.component';\n\nimport {SimpleFunction} from '../../services/simple-function.service';\n\n@NgModule({\n  declarations: [\n    CustomTemplateComponent\n  ],\n  entryComponents: [\n    CustomTemplateComponent\n  ],\n  exports: [\n    CustomTemplateComponent\n  ],\n  imports: [\n    AutoCompleteModule,\n    CommonModule,\n    FormsModule,\n    IonicModule\n  ],\n  providers: [\n    SimpleFunction\n  ]\n})\nexport class CustomTemplateModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbXVsdGktZnVuY3Rpb24vbXVsdGktZnVuY3Rpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import {Component} from '@angular/core';\n\nimport {AutoCompleteOptions} from 'ionic4-auto-complete';\n\nimport {SimpleFunction} from '../../services/simple-function.service';\n\n@Component({\n  selector:    'multi-function',\n  templateUrl: 'multi-function.component.html',\n  styleUrls: [\n    'multi-function.component.scss'\n  ]\n})\nexport class MultiFunctionComponent {\n  public excludedOptions:AutoCompleteOptions;\n  public selectedOptions:AutoCompleteOptions;\n\n  public excluded:string[] = [];\n  public selected:string[] = [];\n\n  constructor(\n    public provider:SimpleFunction\n  ) {\n    this.selectedOptions = new AutoCompleteOptions();\n    this.selectedOptions.autocomplete = 'on';\n    this.selectedOptions.debounce = 750;\n    this.selectedOptions.placeholder = 'Filter and select multiple..';\n    this.selectedOptions.searchIcon = 'assets/icons/add-user.svg';\n    this.selectedOptions.type = 'search';\n\n    this.excludedOptions = new AutoCompleteOptions();\n    this.excludedOptions.autocomplete = 'on';\n    this.excludedOptions.debounce = 750;\n    this.excludedOptions.placeholder = 'Filter and select multiple to exclude..';\n    this.excludedOptions.searchIcon = 'assets/icons/add-user.svg';\n    this.excludedOptions.type = 'search';\n  }\n\n  on(output, event):void {\n    console.log(output);\n    // console.log(event);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\n\nimport {AutoCompleteModule} from 'ionic4-auto-complete';\n\nimport {MultiFunctionComponent} from './multi-function.component';\n\nimport {SimpleFunction} from '../../services/simple-function.service';\n\n@NgModule({\n  declarations: [\n    MultiFunctionComponent\n  ],\n  entryComponents: [\n    MultiFunctionComponent\n  ],\n  exports: [\n    MultiFunctionComponent\n  ],\n  imports: [\n    AutoCompleteModule,\n    CommonModule,\n    FormsModule,\n    IonicModule\n  ],\n  providers: [\n    SimpleFunction\n  ]\n})\nexport class MultiFunctionModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2ltcGxlLWZ1bmN0aW9uL3NpbXBsZS1mdW5jdGlvbi5jb21wb25lbnQuc2NzcyJ9 */\"","import {Component} from '@angular/core';\n\nimport {AutoCompleteOptions} from 'ionic4-auto-complete';\n\nimport {SimpleFunction} from '../../services/simple-function.service';\n\n@Component({\n  selector:    'simple-function',\n  templateUrl: 'simple-function.component.html',\n  styleUrls: [\n    'simple-function.component.scss'\n  ]\n})\nexport class SimpleFunctionComponent {\n  public options:AutoCompleteOptions;\n\n  public selected:string = '';\n\n  constructor(\n      public provider:SimpleFunction\n  ) {\n    this.options = new AutoCompleteOptions();\n\n    this.options.autocomplete = 'on';\n    this.options.cancelButtonIcon = 'assets/icons/clear.svg';\n    this.options.clearIcon = 'assets/icons/clear.svg';\n    this.options.debounce = 750;\n    this.options.placeholder = 'Type text to search..';\n    this.options.searchIcon = 'assets/icons/add-user.svg';\n    this.options.type = 'search';\n  }\n\n  on(output, event):void {\n    console.log(output);\n    // console.log(event);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\n\nimport {AutoCompleteModule} from 'ionic4-auto-complete';\n\nimport {SimpleFunctionComponent} from './simple-function.component';\n\nimport {SimpleFunction} from '../../services/simple-function.service';\n\n@NgModule({\n  declarations: [\n    SimpleFunctionComponent\n  ],\n  entryComponents: [\n    SimpleFunctionComponent\n  ],\n  exports: [\n    SimpleFunctionComponent\n  ],\n  imports: [\n    AutoCompleteModule,\n    CommonModule,\n    FormsModule,\n    IonicModule\n  ],\n  providers: [\n    SimpleFunction\n  ]\n})\nexport class SimpleFunctionModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2ltcGxlLXNlcnZpY2Uvc2ltcGxlLXNlcnZpY2UuY29tcG9uZW50LnNjc3MifQ== */\"","import {Component} from '@angular/core';\n\nimport {AutoCompleteOptions} from 'ionic4-auto-complete';\n\nimport {SimpleService} from '../../services/simple-service.service';\n\n@Component({\n  selector:    'simple-service',\n  templateUrl: 'simple-service.component.html',\n  styleUrls: [\n    'simple-service.component.scss'\n  ]\n})\nexport class SimpleServiceComponent {\n  public options:AutoCompleteOptions;\n\n  public selected:string = '';\n\n  constructor(\n    public provider:SimpleService\n  ) {\n    this.options = new AutoCompleteOptions();\n\n    this.options.autocomplete = 'on';\n    this.options.debounce = 750;\n    this.options.placeholder = 'Type text to search..';\n    this.options.type = 'add-friend.svg';\n  }\n\n  random():void {\n    this.provider.getResults().subscribe(\n      (results) => {\n        const count = results.length;\n\n        this.selected = results[Math.round(Math.random() * count)]\n      }\n    );\n  }\n\n  on(output, event):void {\n    console.log(output);\n    // console.log(event);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\n\nimport {AutoCompleteModule} from 'ionic4-auto-complete';\n\nimport {SimpleServiceComponent} from './simple-service.component';\n\nimport {SimpleService} from '../../services/simple-service.service';\n\n@NgModule({\n  declarations: [\n    SimpleServiceComponent\n  ],\n  entryComponents: [\n    SimpleServiceComponent\n  ],\n  exports: [\n    SimpleServiceComponent\n  ],\n  imports: [\n    AutoCompleteModule,\n    CommonModule,\n    FormsModule,\n    IonicModule\n  ],\n  providers: [\n    SimpleService\n  ]\n})\nexport class SimpleServiceModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {HomePage} from './home.page';\n\nimport {CustomTemplateModule} from '../../components/custom-template/custom-template.module';\nimport {MultiFunctionModule} from '../../components/multi-function/multi-function.module';\nimport {SimpleFunctionModule} from '../../components/simple-function/simple-function.module';\nimport {SimpleServiceModule} from '../../components/simple-service/simple-service.module';\n\n@NgModule({\n  declarations: [\n    HomePage\n  ],\n  imports: [\n    CommonModule,\n    CustomTemplateModule,\n    FormsModule,\n    IonicModule,\n    MultiFunctionModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ]),\n    SimpleFunctionModule,\n    SimpleServiceModule\n  ]\n})\nexport class HomePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2hvbWUvaG9tZS5wYWdlLnNjc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\n\nimport {Segment} from '../../models/segment.model';\n\n@Component({\n  selector:    'home-page',\n  templateUrl: 'home.page.html',\n  styleUrls: [\n    'home.page.scss'\n  ],\n})\nexport class HomePage implements OnInit {\n  public segments:Segment[] = [\n    {\n      key:   'simple-function',\n      label: 'Simple Function'\n    },\n    {\n      key:   'simple-service',\n      label: 'Data Provider'\n    },\n    {\n      key:   'multi-function',\n      label: 'Multi Select'\n    },\n    {\n      key:   'custom-template',\n      label: 'Custom Template'\n    }\n  ];\n\n  public selectedSegment:string = this.segments[0].key;\n\n  constructor(\n      private route:ActivatedRoute,\n      private router:Router\n  ) {\n\n  }\n\n  ngOnInit():void {\n    this.route.fragment.subscribe(\n        (fragment) => {\n          this.setSegment(fragment);\n        }\n    );\n  }\n\n  onClickSegment(event:CustomEvent):void {\n    if (event.detail && typeof event.detail.value === 'string') {\n      const segment = event.detail.value;\n\n      this.setSegment(segment);\n    }\n  }\n\n  setSegment(segment:string):void {\n    if (typeof segment === 'string') {\n      segment = segment.toLowerCase();\n\n      const arrayHas = this.segments.some(\n        (candidate) => {\n          return candidate.key === segment;\n        }\n      );\n\n      if (arrayHas) {\n        this.selectedSegment = segment;\n\n        this.router.navigate(\n           [],\n           {\n             fragment: segment\n           }\n        ).then();\n      }\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {AutoCompleteService} from 'ionic4-auto-complete';\n\nimport {User} from '../models/user.model';\n\n@Injectable()\nexport class SimpleFunction implements AutoCompleteService {\n  labelAttribute = 'full_name';\n\n  public objects:User[] = [\n      {\n          first_name: 'Dominic',\n          last_name: 'Elliot',\n          full_name: 'Dominic Elliot',\n      },\n      {\n          first_name: 'Duke',\n          last_name: 'Ellington',\n          full_name: 'Duke Ellington',\n      },\n      {\n          first_name: 'Jeremy',\n          last_name: 'Quick',\n          full_name: 'Jeremy Quick',\n      },\n      {\n          first_name: 'Matt',\n          last_name: 'Smith',\n          full_name: 'Matt Smith',\n      },\n      {\n          first_name: 'Matthew',\n          last_name: 'Drake',\n          full_name: 'Matthew Drake',\n      },\n      {\n          first_name: 'Yu',\n          last_name: 'Lee',\n          full_name: 'Yu Lee',\n      },\n      {\n          first_name: 'Zach',\n          last_name: 'Smith',\n          full_name: 'Zach Smith',\n      }\n  ];\n\n  constructor() {\n\n  }\n\n  getResults(keyword) {\n    keyword = keyword.toLowerCase();\n\n    return this.objects.filter(\n      (object) => {\n         const value = object[this.labelAttribute].toLowerCase();\n\n         return value.includes(keyword);\n      }\n    );\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {Observable, of} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\nimport {AutoCompleteService} from 'ionic4-auto-complete';\n\nimport {Country} from '../models/country.model';\n\n@Injectable()\nexport class SimpleService implements AutoCompleteService {\n  labelAttribute = 'name';\n\n  private countries:Country[] = [];\n\n  constructor(\n    private http:HttpClient\n  ) {\n\n  }\n\n  getResults(keyword?:string):Observable<any[]> {\n    keyword = typeof keyword === 'string' ? keyword : '';\n\n    let observable:Observable<any>;\n\n    if (this.countries.length === 0) {\n      observable = this.http.get('https://restcountries.eu/rest/v2/all').pipe(\n        map(\n          (results:Country[]) => {\n            if (results) {\n              this.countries = results;\n            }\n\n            return this.countries;\n          }\n        )\n      );\n    } else {\n      observable = of(this.countries);\n    }\n\n    return observable.pipe(\n      map(\n        (result) => {\n          return result.filter(\n            (item) => {\n              return item.name.toLowerCase().startsWith(\n                  keyword.toLowerCase()\n              );\n            }\n          );\n        }\n      )\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}